// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`interpreter-evaluation short-circuit-initializations should pass compilation 1`] = `
[
  [
    "true",
    "Bool",
  ],
  [
    "loop()",
    "Bool",
  ],
  [
    "true || loop()",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "exception(0)",
    "Bool",
  ],
  [
    "true || exception(0)",
    "Bool",
  ],
  [
    "false",
    "Bool",
  ],
  [
    "loop()",
    "Bool",
  ],
  [
    "false && loop()",
    "Bool",
  ],
  [
    "false",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "exception(0)",
    "Bool",
  ],
  [
    "false && exception(0)",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "loop()",
    "Bool",
  ],
  [
    "true || loop()",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "exception(0)",
    "Bool",
  ],
  [
    "true || exception(0)",
    "Bool",
  ],
  [
    "false",
    "Bool",
  ],
  [
    "loop()",
    "Bool",
  ],
  [
    "false && loop()",
    "Bool",
  ],
  [
    "false",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "exception(0)",
    "Bool",
  ],
  [
    "false && exception(0)",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "loop()",
    "Bool",
  ],
  [
    "true || loop()",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "exception(0)",
    "Bool",
  ],
  [
    "true || exception(0)",
    "Bool",
  ],
  [
    "false",
    "Bool",
  ],
  [
    "loop()",
    "Bool",
  ],
  [
    "false && loop()",
    "Bool",
  ],
  [
    "false",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "exception(0)",
    "Bool",
  ],
  [
    "false && exception(0)",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "loop()",
    "Bool",
  ],
  [
    "true || loop()",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "exception(0)",
    "Bool",
  ],
  [
    "true || exception(0)",
    "Bool",
  ],
  [
    "false",
    "Bool",
  ],
  [
    "loop()",
    "Bool",
  ],
  [
    "false && loop()",
    "Bool",
  ],
  [
    "false",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "exception(0)",
    "Bool",
  ],
  [
    "false && exception(0)",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "true",
    "Bool",
  ],
  [
    "1",
    "Int",
  ],
  [
    "v",
    "Int",
  ],
  [
    "1 / v",
    "Int",
  ],
  [
    "0",
    "Int",
  ],
  [
    "1 / v == 0",
    "Bool",
  ],
]
`;

exports[`interpreter-evaluation stack-deepness-recursion should pass compilation 1`] = `
[
  [
    "200",
    "Int",
  ],
  [
    "multiplyByTwo(200)",
    "Int",
  ],
  [
    "n",
    "Int",
  ],
  [
    "0",
    "Int",
  ],
  [
    "n < 0",
    "Bool",
  ],
  [
    "n",
    "Int",
  ],
  [
    "-n",
    "Int",
  ],
  [
    "multiplyByTwo(-n)",
    "Int",
  ],
  [
    "-multiplyByTwo(-n)",
    "Int",
  ],
  [
    "n",
    "Int",
  ],
  [
    "0",
    "Int",
  ],
  [
    "n == 0",
    "Bool",
  ],
  [
    "0",
    "Int",
  ],
  [
    "2",
    "Int",
  ],
  [
    "n",
    "Int",
  ],
  [
    "1",
    "Int",
  ],
  [
    "n - 1",
    "Int",
  ],
  [
    "multiplyByTwo(n - 1)",
    "Int",
  ],
  [
    "2 + multiplyByTwo(n - 1)",
    "Int",
  ],
]
`;
