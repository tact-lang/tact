primitive Int;
trait BaseTrait {}

contract Test {

    get fun foo(v: Int): Int {
        let a: Int = 5;
        let x: Int = 10;
        repeat (x) {                     
            a += 10;
            a = a - a + 3;                      
        }                                
        return 1 / (a - 3);         // Loop executes. After each iteration, a = 3,
    }                               // which means division by zero after the loop.
}
