import * as i from "../index"
import {instructions as jettonMinterInstructions} from "./testdata/jetton_minter_discoverable_JettonMinter.tasm"
import {instructions as escrowInstructions} from "./testdata/escrow_Escrow.tasm"
import {instructions as simpleCounterInstructions} from "./testdata/test_SimpleCounter.tasm"
import {instructions as someContractInstructions} from "./testdata/SomeContract.tasm"
import {instructions as someContract2Instructions} from "./testdata/SomeContract2.tasm"
import {instructions as pushIntLong130Instructions} from "./testdata/PUSHINT_LONG_130.tasm"
import {instructions as withExoticInstructions} from "./testdata/WithExotic.tasm"
import * as path from "node:path"
import * as fs from "node:fs"
import {Cell} from "@ton/core"
import {DefaultExoticCell, hex} from "../util"

const readBoc = (filename: string): Cell | undefined => {
    const filePath = path.join(__dirname, "testdata", filename)
    return Cell.fromBoc(fs.readFileSync(filePath))[0]
}

const readHex = (filename: string): Cell => {
    const filePath = path.join(__dirname, "testdata", filename)
    return Cell.fromHex(fs.readFileSync(filePath, "utf8").trim())
}

const test =
    (instructions: i.Instr[], expectedBoc: Cell | undefined): (() => void) =>
    () => {
        if (expectedBoc === undefined) {
            throw new Error("expectedBoc is undefined")
        }
        const compiled = i.compileCell(instructions)
        expect(compiled.toString()).toEqual(expectedBoc.toString())
    }

describe("tests", () => {
    it(
        "JettonMinter",
        test(jettonMinterInstructions, readBoc("jetton_minter_discoverable_JettonMinter.boc")),
    )

    it("SimpleCounter", test(simpleCounterInstructions, readBoc("test_SimpleCounter.boc")))
    it("Escrow", test(escrowInstructions, readBoc("escrow_Escrow.boc")))
    it("SomeContract", test(someContractInstructions, readHex("SomeContract.hex")))
    it("SomeContract2", test(someContract2Instructions, readHex("SomeContract2.hex")))
    it("PUSHINT_LONG 130", test(pushIntLong130Instructions, readHex("PUSHINT_LONG_130.hex")))

    it(
        "exotic",
        test(
            [
                i.PSEUDO_EXOTIC(
                    DefaultExoticCell(
                        hex(
                            "025E3B0EBFC424D34F7D55037A361D70D56902A9F2568603D0717CF4856240DA53",
                        ).asCell(),
                    ),
                ),
            ],
            Cell.fromHex(
                "b5ee9c72010101010023000842025e3b0ebfc424d34f7d55037a361d70d56902a9f2568603d0717cf4856240da53",
            ),
        ),
    )

    it(
        "exotic 2",
        test(
            withExoticInstructions,
            Cell.fromHex(
                "",
            ),
        ),
    )
})
