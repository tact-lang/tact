{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "patternProperties": {
    "\\$schema": {
      "type": "string"
    },
    "^[A-Z][A-Z0-9_]*$": {
      "type": "object"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "values": {
      "type": "object",
      "additionalProperties": false,
      "required": ["registers"],
      "properties": {
        "stack": {
          "$ref": "#/definitions/stack"
        },
        "registers": {
          "type": "array",
          "title": "Register values",
          "items": {
            "$ref": "#/definitions/register_flow"
          },
          "additionalItems": false
        }
      }
    },
    "register_flow": {
      "title": "Register",
      "description": "Represents read/write access to a register",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "index"],
          "properties": {
            "type": { "const": "constant" },
            "index": { "type": "number" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "var_name"],
          "properties": {
            "type": { "const": "variable" },
            "var_name": { "$ref": "#/definitions/var_name" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "name"],
          "properties": {
            "type": { "const": "special" },
            "name": { "enum": ["gas", "cstate", "r"] }
          }
        }
      ]
    },
    "stack": {
      "type": "array",
      "title": "Stack values",
      "description": "Stack constraints. Top of stack is the last value.",
      "items": {
        "$ref": "#/definitions/stack_entry"
      },
      "additionalItems": false
    },
    "mutation": {
      "type": "object",
      "properties": {
        "length": {
          "type": "object",
          "properties": {
            "amount_arg": { "type": "number" },
            "stack_amount_arg": { "type": "number" }
          }
        }
      },
      "required": ["length"]
    },
    "stack_entry": {
      "title": "Stack entry",
      "description": "Representation of stack entry or group of stack entries",
      "examples": [
        {
          "type": "simple",
          "name": "i",
          "value_types": ["Integer"]
        },
        {
          "type": "conditional",
          "name": "status",
          "match": [
            {
              "value": 0,
              "stack": [
                {
                  "type": "simple",
                  "name": "s",
                  "value_types": ["Slice"]
                }
              ]
            },
            {
              "value": -1,
              "stack": [
                {
                  "type": "simple",
                  "name": "x",
                  "value_types": ["Integer"]
                },
                {
                  "type": "simple",
                  "name": "s2",
                  "value_types": ["Slice"]
                }
              ]
            }
          ]
        },
        {
          "type": "simple",
          "name": "D",
          "value_types": ["Slice", "Null"]
        }
      ],
      "oneOf": [
        {
          "type": "object",
          "required": ["type", "name"],
          "properties": {
            "type": { "const": "simple" },
            "name": { "$ref": "#/definitions/var_name" },
            "value_types": {
              "title": "Possible value types",
              "type": "array",
              "items": {
                "enum": [
                  "Integer",
                  "Boolean",
                  "Cell",
                  "Builder",
                  "Slice",
                  "Tuple",
                  "Continuation",
                  "Null"
                ]
              }
            },
            "mutations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/mutation"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "value_type", "value"],
          "properties": {
            "type": {
              "const": "const"
            },
            "value_type": {
              "title": "Constant type",
              "type": "string",
              "enum": ["Integer", "Null"]
            },
            "value": {
              "title": "Constant value",
              "type": ["number", "null"]
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "name", "match"],
          "properties": {
            "type": {
              "const": "conditional"
            },
            "name": {
              "$ref": "#/definitions/var_name",
              "title": "Variable to match"
            },
            "match": {
              "type": "array",
              "additionalItems": false,
              "items": {
                "type": "object",
                "title": "Match arm",
                "description": "",
                "additionalProperties": false,
                "required": ["value", "stack"],
                "properties": {
                  "value": {
                    "type": "integer",
                    "title": "Arm value",
                    "description": ""
                  },
                  "stack": {
                    "$ref": "#/definitions/stack"
                  }
                }
              }
            },
            "else": {
              "$ref": "#/definitions/stack"
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "name", "length_var", "array_entry"],
          "properties": {
            "type": {
              "const": "array"
            },
            "name": { "$ref": "#/definitions/var_name" },
            "length_var": {
              "title": "Variable which contains array length",
              "$ref": "#/definitions/var_name"
            },
            "array_entry": {
              "allOf": [{ "$ref": "#/definitions/stack" }],
              "title": "Array single entry definition",
              "description": "Array is a structure like `x1 y1 z1 x2 y2 z2 ... x_n y_n z_n n` which contains `n` entries of `x_i y_i z_i`. This property defines the structure of a single entry."
            }
          }
        }
      ]
    },
    "var_name": {
      "type": "string",
      "title": "Variable name",
      "description": "Allowed chars are `a-zA-Z0-9_`, must not begin with digit or underscore and must not end with underscore.",
      "markdownDescription": "Allowed chars are `a-zA-Z0-9_`, must not begin with digit or underscore and must not end with underscore."
    },
    "display_hint": {
      "title": "Display Hint",
      "description": "Hint for converting operands between raw values and Asm.fif display format",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type"],
          "properties": {
            "type": { "const": "continuation" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "size_var"],
          "properties": {
            "type": { "const": "dictionary" },
            "size_var": { "$ref": "#/definitions/var_name" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "value"],
          "properties": {
            "type": { "const": "add" },
            "value": { "type": "number" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type"],
          "properties": {
            "type": { "const": "stack" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type"],
          "properties": {
            "type": { "const": "register" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type"],
          "properties": {
            "type": { "const": "pushint4" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type"],
          "properties": {
            "type": { "const": "optional_nargs" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type"],
          "properties": {
            "type": { "const": "plduz" }
          }
        }
      ]
    },
    "display_hints": {
      "type": "array",
      "additionalItems": false,
      "title": "Display Hints",
      "description": "Set of hints to convert between Asm.fif representation and raw bytecode",
      "items": { "$ref": "#/definitions/display_hint" }
    },
    "operand": {
      "title": "Operand",
      "description": "Static instruction parameter serialized to bytecode.",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "type",
            "display_hints",
            "size",
            "max_value",
            "min_value"
          ],
          "properties": {
            "name": { "$ref": "#/definitions/var_name" },
            "type": { "const": "uint" },
            "display_hints": { "$ref": "#/definitions/display_hints" },
            "size": {
              "type": "number",
              "title": "Integer size, bits"
            },
            "max_value": {
              "type": "number",
              "title": "Maximum integer value"
            },
            "min_value": {
              "type": "number",
              "title": "Minimum integer value"
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "type",
            "display_hints",
            "size",
            "max_value",
            "min_value"
          ],
          "properties": {
            "name": { "$ref": "#/definitions/var_name" },
            "type": { "const": "int" },
            "display_hints": { "$ref": "#/definitions/display_hints" },
            "size": {
              "type": "number",
              "title": "Integer size, bits"
            },
            "max_value": {
              "type": "number",
              "title": "Maximum integer value"
            },
            "min_value": {
              "type": "number",
              "title": "Minimum integer value"
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["name", "type"],
          "properties": {
            "name": { "$ref": "#/definitions/var_name" },
            "type": { "const": "pushint_long" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["name", "type", "display_hints"],
          "properties": {
            "name": { "$ref": "#/definitions/var_name" },
            "type": { "const": "ref" },
            "display_hints": { "$ref": "#/definitions/display_hints" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "name",
            "type",
            "display_hints",
            "bits_length_var_size",
            "bits_padding",
            "completion_tag",
            "max_bits",
            "min_bits",
            "max_refs",
            "min_refs"
          ],
          "properties": {
            "name": { "$ref": "#/definitions/var_name" },
            "type": { "const": "subslice" },
            "display_hints": { "$ref": "#/definitions/display_hints" },
            "bits_length_var_size": {
              "type": "number",
              "title": "Size of bit length operand"
            },
            "bits_padding": {
              "type": "number",
              "title": "Constant integer value to add to length of bitstring to load."
            },
            "refs_length_var_size": {
              "type": "number",
              "title": "Size of ref count operand",
              "description": "Optional, no refs in this operand in case of absence."
            },
            "refs_add": {
              "type": "number",
              "title": "Constant integer value to add to ref count",
              "default": 0
            },
            "completion_tag": {
              "type": "boolean",
              "title": "Completion tag flag",
              "description": "Determines completion tag presence: trailing `'1' + '0' * x` in bitstring",
              "markdownDescription": "Determines completion tag presence: trailing `'1' + '0' * x` in bitstring"
            },
            "max_bits": {
              "type": "number",
              "title": "Max bit size",
              "description": "Hint for maximum bits available to store for this operand"
            },
            "min_bits": {
              "type": "number",
              "title": "Min bit size",
              "description": "Hint for minimum bits available to store for this operand"
            },
            "max_refs": {
              "type": "number",
              "title": "Max ref size",
              "description": "Hint for maximum refs available to store for this operand"
            },
            "min_refs": {
              "type": "number",
              "title": "Min ref size",
              "description": "Hint for minimum refs available to store for this operand"
            }
          }
        }
      ]
    },
    "continuation": {
      "title": "Continuation",
      "description": "Description of a continuation with static savelist",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type"],
          "properties": {
            "type": { "const": "cc" },
            "save": { "$ref": "#/definitions/savelist" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "var_name"],
          "properties": {
            "type": { "const": "variable" },
            "var_name": {
              "$ref": "#/definitions/var_name",
              "title": "Continuation variable name"
            },
            "save": { "$ref": "#/definitions/savelist" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "index"],
          "properties": {
            "type": { "const": "register" },
            "index": { "type": "integer", "title": "Register number (0-3)" },
            "save": { "$ref": "#/definitions/savelist" }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "name", "args"],
          "properties": {
            "type": { "const": "special" },
            "name": { "const": "until" },
            "args": {
              "type": "object",
              "required": ["body", "after"],
              "additionalProperties": false,
              "properties": {
                "body": { "$ref": "#/definitions/continuation" },
                "after": { "$ref": "#/definitions/continuation" }
              }
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "name", "args"],
          "properties": {
            "type": { "const": "special" },
            "name": { "const": "while" },
            "args": {
              "type": "object",
              "required": ["cond", "body", "after"],
              "additionalProperties": false,
              "properties": {
                "cond": { "$ref": "#/definitions/continuation" },
                "body": { "$ref": "#/definitions/continuation" },
                "after": { "$ref": "#/definitions/continuation" }
              }
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "name", "args"],
          "properties": {
            "type": { "const": "special" },
            "name": { "const": "again" },
            "args": {
              "type": "object",
              "required": ["body"],
              "additionalProperties": false,
              "properties": {
                "body": { "$ref": "#/definitions/continuation" }
              }
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "name", "args"],
          "properties": {
            "type": { "const": "special" },
            "name": { "const": "repeat" },
            "args": {
              "type": "object",
              "required": ["count", "body", "after"],
              "additionalProperties": false,
              "properties": {
                "count": {
                  "$ref": "#/definitions/var_name",
                  "title": "Variable name"
                },
                "body": { "$ref": "#/definitions/continuation" },
                "after": { "$ref": "#/definitions/continuation" }
              }
            }
          }
        },
        {
          "type": "object",
          "additionalProperties": false,
          "required": ["type", "name", "args"],
          "properties": {
            "type": { "const": "special" },
            "name": { "const": "pushint" },
            "args": {
              "type": "object",
              "required": ["next", "value"],
              "additionalProperties": false,
              "properties": {
                "value": {
                  "type": "integer",
                  "title": "Integer to push to stack"
                },
                "next": { "$ref": "#/definitions/continuation" }
              }
            }
          }
        }
      ]
    },
    "savelist": {
      "title": "Continuation savelist",
      "description": "Values of saved control flow registers c0-c3",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "c0": { "$ref": "#/definitions/continuation" },
        "c1": { "$ref": "#/definitions/continuation" },
        "c2": { "$ref": "#/definitions/continuation" },
        "c3": { "$ref": "#/definitions/continuation" }
      }
    }
  }
}
