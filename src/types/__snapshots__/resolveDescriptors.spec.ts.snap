// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`resolveDescriptors should fail descriptors for asm-fun-shuffle-arg-duplicate 1`] = `
"<unknown>:3:1: asm argument rearrangement cannot have duplicates
Line 3, col 1:
  2 | 
> 3 | asm(x x) fun foo(x: Int) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
  4 |     DROP
"
`;

exports[`resolveDescriptors should fail descriptors for asm-fun-shuffle-arg-missing-and-non-existent-param 1`] = `
"<unknown>:3:1: asm argument rearrangement must mention all function parameters
Line 3, col 1:
  2 | 
> 3 | asm(x extra) fun foo(x: Int, y: Int) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  4 |     DROP
"
`;

exports[`resolveDescriptors should fail descriptors for asm-fun-shuffle-arg-missing-param 1`] = `
"<unknown>:3:1: asm argument rearrangement must mention all function parameters
Line 3, col 1:
  2 | 
> 3 | asm(x) fun foo(x: Int, y: Int) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  4 |     DROP
"
`;

exports[`resolveDescriptors should fail descriptors for asm-fun-shuffle-arg-non-existent-param 1`] = `
"<unknown>:3:1: asm argument rearrangement must mention only function parameters
Line 3, col 1:
  2 | 
> 3 | asm(x extra) fun foo(x: Int) {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  4 |     DROP
"
`;

exports[`resolveDescriptors should fail descriptors for asm-fun-shuffle-ret-duplicate 1`] = `
"<unknown>:3:1: asm return rearrangement cannot have duplicates
Line 3, col 1:
  2 | 
> 3 | asm(-> 0 0) fun foo(x: Int): Int {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  4 |     INC
"
`;

exports[`resolveDescriptors should fail descriptors for asm-fun-shuffle-ret-missing-position 1`] = `
"<unknown>:4:1: asm return rearrangement must mention all return position numbers: [0..1]
Line 4, col 1:
  3 | 
> 4 | asm(-> 0) fun foo(x: Int, y: Int): Pair {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  5 |     SWAP
"
`;

exports[`resolveDescriptors should fail descriptors for asm-fun-shuffle-ret-non-existent-position 1`] = `
"<unknown>:4:1: asm return rearrangement must mention only valid return position numbers: [0..1]
Line 4, col 1:
  3 | 
> 4 | asm(-> 2 1 0) fun foo(x: Int, y: Int): Pair {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  5 |     SWAP
"
`;

exports[`resolveDescriptors should fail descriptors for const-decl-default-field-wrong-initializer-type copy 1`] = `
"<unknown>:4:17: Constant "C" has declared type "Bool", but its initializer has incompatible type "Int"
Line 4, col 17:
  3 | 
> 4 | const C: Bool = 42;
                      ^~
  5 | 
"
`;

exports[`resolveDescriptors should fail descriptors for const-eval-overflow 1`] = `
"<unknown>:8:26: Cannot evaluate expression to a constant: the number of bits shifted ('-1073741824') must be within [0..256] range
Line 8, col 26:
  7 | 
> 8 | const a: Int = 1 + (1 >> -1073741824);
                               ^~~~~~~~~~~
  9 | 
"
`;

exports[`resolveDescriptors should fail descriptors for contract-bounced-receiver-int 1`] = `
"<unknown>:17:3: Bounce receive function can only accept bounced message, message or Slice
Line 17, col 3:
  16 |   
> 17 |   bounced(src: Int) {
         ^~~~~~~~~~~~~~~~~~~
  18 |     
"
`;

exports[`resolveDescriptors should fail descriptors for contract-bounced-receiver-missing-type-1 1`] = `
"<unknown>:2:14: Unknown bounced receiver parameter type: "A"
Line 2, col 14:
  1 | contract Test {
> 2 |   bounced(a: A) {}
                   ^
  3 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-bounced-receiver-missing-type-2 1`] = `
"<unknown>:2:14: Unknown bounced receiver parameter type: "A"
Line 2, col 14:
  1 | contract Test {
> 2 |   bounced(a: bounced<A>) {}
                   ^~~~~~~~~~
  3 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-bounced-storage-var 1`] = `
"<unknown>:15:3: bounced<A> is a runtime only type and can't be used as field
Line 15, col 3:
  14 | contract Test {
> 15 |   src: bounced<A>;
         ^~~~~~~~~~~~~~~
  16 |   init() {}
"
`;

exports[`resolveDescriptors should fail descriptors for contract-const-decl-default-field-wrong-initializer-type 1`] = `
"<unknown>:5:21: Constant "C" has declared type "Bool", but its initializer has incompatible type "Int"
Line 5, col 21:
  4 | contract Test {
> 5 |     const C: Bool = 42;
                          ^~
  6 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-const-override-virtual-no-keyword 1`] = `
"<unknown>:9:3: Constant "Foo" is defined as virtual in trait "T": you are probably missing "override" keyword
Line 9, col 3:
   8 | contract TestContract with T {
>  9 |   const Foo: Int = 42;
         ^~~~~~~~~~~~~~~~~~~~
  10 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-does-not-override-abstract-const 1`] = `
"<unknown>:8:1: Trait "T" requires constant "Foo"
Line 8, col 1:
  7 | 
> 8 | contract TestContract with T {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  9 |   // does not override an abstract const
"
`;

exports[`resolveDescriptors should fail descriptors for contract-does-not-override-abstract-getter 1`] = `
"<unknown>:8:1: Trait "T" requires function "getter"
Line 8, col 1:
  7 | 
> 8 | contract TestContract with T {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  9 |   // does not override an abstract getter
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicate-bounced-fallback 1`] = `
"<unknown>:24:3: Fallback bounce receive function already exists
Line 24, col 3:
  23 |   
> 24 |   bounced(msg: Slice) {
         ^~~~~~~~~~~~~~~~~~~~~
  25 |   }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicate-bounced1 1`] = `
"<unknown>:24:3: Bounce receive function for "A" already exists
Line 24, col 3:
  23 |   
> 24 |   bounced(msg: bounced<A>) {
         ^~~~~~~~~~~~~~~~~~~~~~~~~~
  25 |   }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicate-bounced2 1`] = `
"<unknown>:7:13: Bounce receive function for "Msg" already exists
Line 7, col 13:
  6 |     bounced(msg: Msg) { }
> 7 |     bounced(msg: Msg) { }
                  ^~~~~~~~
  8 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicate-external 1`] = `
"<unknown>:7:14: Receive function for "Msg" already exists
Line 7, col 14:
  6 |     external(msg: Msg) { }
> 7 |     external(msg: Msg) { }
                   ^~~~~~~~
  8 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicate-external-fallback 1`] = `
"<unknown>:20:5: Empty receive function already exists
Line 20, col 5:
  19 | 
> 20 |     external() {
           ^~~~~~~~~~~~
  21 | 
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicate-init 1`] = `
"<unknown>:13:5: Init function already exists
Line 13, col 5:
  12 | 
> 13 |     init(a: Bool) {
           ^~~~~~~~~~~~~~~
  14 | 
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicate-receiver 1`] = `
"<unknown>:7:13: Receive function for "Msg" already exists
Line 7, col 13:
  6 |     receive(msg: Msg) { }
> 7 |     receive(msg: Msg) { }
                  ^~~~~~~~
  8 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicate-storage-var 1`] = `
"<unknown>:11:3: Field "b" already exists
Line 11, col 3:
  10 |   b: Int;
> 11 |   b: Int;
         ^~~~~~
  12 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-duplicates-in-trait-list 1`] = `
"<unknown>:7:1: The list of inherited traits for contract "Test" has duplicates
Line 7, col 1:
  6 | 
> 7 | contract Test with Foo, Foo { }
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  8 | 
"
`;

exports[`resolveDescriptors should fail descriptors for contract-getter-override-virtual-no-keyword 1`] = `
"<unknown>:9:3: Function "getter" is defined as virtual in trait "T": you are probably missing "override" keyword
Line 9, col 3:
   8 | contract TestContract with T {
>  9 |   get fun getter(): Int { return 43 }
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  10 | }
"
`;

exports[`resolveDescriptors should fail descriptors for contract-missing-type 1`] = `
"<unknown>:12:23: Type "Point" not found
Line 12, col 23:
  11 |     }
> 12 |     get fun hello2(): Point {
                             ^~~~~
  13 |         return 0;
"
`;

exports[`resolveDescriptors should fail descriptors for contract-receiver-int 1`] = `
"<unknown>:13:3: Receive function can only accept message, Slice or String
Line 13, col 3:
  12 | contract Pair {
> 13 |   receive(src: Int) {
         ^~~~~~~~~~~~~~~~~~~
  14 |     
"
`;

exports[`resolveDescriptors should fail descriptors for contract-receiver-optional-msg 1`] = `
"<unknown>:13:3: Receive function can only accept non-optional message types
Line 13, col 3:
  12 | contract Pair {
> 13 |   receive(src: B?) {
         ^~~~~~~~~~~~~~~~~~
  14 |     
"
`;

exports[`resolveDescriptors should fail descriptors for contract-receiver-struct 1`] = `
"<unknown>:13:3: Receive function can only accept message
Line 13, col 3:
  12 | contract Pair {
> 13 |   receive(src: B) {
         ^~~~~~~~~~~~~~~~~
  14 |     
"
`;

exports[`resolveDescriptors should fail descriptors for expr-bitwise-not-bool-in-const1 1`] = `
"<unknown>:4:16: Invalid type "Bool" for unary operator "~"
Line 4, col 16:
  3 | 
> 4 | const a: Int = ~ true;
                     ^~~~~~
"
`;

exports[`resolveDescriptors should fail descriptors for expr-bitwise-not-bool-in-const2 1`] = `
"<unknown>:4:17: Invalid type "Bool" for unary operator "~"
Line 4, col 17:
  3 | 
> 4 | const a: Bool = ~ true;
                      ^~~~~~
"
`;

exports[`resolveDescriptors should fail descriptors for getter-outside-contract 1`] = `
"<unknown>:8:1: Getters must be defined within a contract
Line 8, col 1:
  7 | 
> 8 | get fun sample(a: Int): Int {
      ^~~
  9 |     return 0;
"
`;

exports[`resolveDescriptors should fail descriptors for message-opcode-too-large 1`] = `
"<unknown>:1:9: Opcode of message "Foo" is too large: it must fit into 32 bits
Line 1, col 9:
> 1 | message(0x1_FFFFF_FFFF) Foo { }
              ^~~~~~~~~~~~~~
  2 | 
"
`;

exports[`resolveDescriptors should fail descriptors for message-opcode-zero 1`] = `
"<unknown>:4:9: Zero opcodes are reserved for text comments and cannot be used for message structs
Line 4, col 9:
  3 | // zero opcodes are reserved for string comments
> 4 | message(0) ZeroOpcode { }
              ^
  5 | 
"
`;

exports[`resolveDescriptors should fail descriptors for method-first-param-not-self1 1`] = `
"<unknown>:8:17: Extend function must have first parameter named "self"
Line 8, col 17:
  7 | 
> 8 | extends fun inc(a: Int): Int {
                      ^~~~~~
  9 |     return a + 1;
"
`;

exports[`resolveDescriptors should fail descriptors for method-first-param-not-self2 1`] = `
"<unknown>:8:17: Parameter name "self" is reserved
Line 8, col 17:
  7 | 
> 8 | fun inc(a: Int, self: Int): Int {
                      ^~~~~~~~~
  9 |     return a + 1 + self;
"
`;

exports[`resolveDescriptors should fail descriptors for native-fun-getter 1`] = `
"<unknown>:9:1: Native functions cannot be getters
Line 9, col 1:
  8 | @name(hello_world)
> 9 | get native sample(a: Int): Int;
      ^~~
"
`;

exports[`resolveDescriptors should fail descriptors for scope-contract-shadows-contract 1`] = `
"<unknown>:12:1: Type "Main" already exists
Line 12, col 1:
  11 | 
> 12 | contract Main {
       ^~~~~~~~~~~~~~~
  13 |     
"
`;

exports[`resolveDescriptors should fail descriptors for scope-duplicate-method 1`] = `
"<unknown>:12:1: Function "hello" already exists in type "Main"
Line 12, col 1:
  11 | 
> 12 | extends fun hello(self: Main): Bool {
       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  13 |     return true;
"
`;

exports[`resolveDescriptors should fail descriptors for scope-fun-shadows-builtin-dumpStack 1`] = `
"<unknown>:1:1: Static function "dumpStack" already exists
Line 1, col 1:
> 1 | fun dumpStack() {
      ^~~~~~~~~~~~~~~~~
  2 | 
"
`;

exports[`resolveDescriptors should fail descriptors for scope-fun-shadows-builtin-ton 1`] = `
"<unknown>:1:1: Static function "ton" already exists
Line 1, col 1:
> 1 | fun ton() {
      ^~~~~~~~~~~
  2 | 
"
`;

exports[`resolveDescriptors should fail descriptors for scope-fun-shadows-fun 1`] = `
"<unknown>:16:1: Struct "Main" must have at least one field
Line 16, col 1:
  15 | 
> 16 | struct Main {
       ^~~~~~~~~~~~~
  17 |     
"
`;

exports[`resolveDescriptors should fail descriptors for scope-internal-fun-shadows-internal-fun 1`] = `
"<unknown>:8:1: Function "hello" already exists in type "Main"
Line 8, col 1:
  7 | 
> 8 | contract Main {
      ^~~~~~~~~~~~~~~
  9 |     fun hello(a: Main): Int {
"
`;

exports[`resolveDescriptors should fail descriptors for scope-param-shadows-param 1`] = `
"<unknown>:9:24: Parameter name "a" is already used
Line 9, col 24:
   8 | contract Main {
>  9 |     fun hello(a: Bool, a: Int): Int {
                              ^~~~~~
  10 | 
"
`;

exports[`resolveDescriptors should fail descriptors for scope-storage-var-shadows-trait-const 1`] = `
"<unknown>:8:3: Contract Foo inherits constant "storageReserve" from its traits and hence cannot have a storage variable with the same name
Line 8, col 3:
  7 |   // is a virtual constant defined in BaseTrait
> 8 |   storageReserve: Int;
        ^~~~~~~~~~~~~~~~~~~
  9 | 
"
`;

exports[`resolveDescriptors should fail descriptors for scope-struct-shadows-contract 1`] = `
"<unknown>:12:1: Type "Main" already exists
Line 12, col 1:
  11 | 
> 12 | struct Main {
       ^~~~~~~~~~~~~
  13 |     
"
`;

exports[`resolveDescriptors should fail descriptors for scope-struct-shadows-struct 1`] = `
"<unknown>:12:1: Type "Main" already exists
Line 12, col 1:
  11 | 
> 12 | struct Main {
       ^~~~~~~~~~~~~
  13 |     
"
`;

exports[`resolveDescriptors should fail descriptors for struct-decl-clash-with-int 1`] = `
"<unknown>:3:1: Type "Int" already exists
Line 3, col 1:
  2 | 
> 3 | struct Int { s: Int = 42 }
      ^~~~~~~~~~~~~~~~~~~~~~~~~~
  4 | 
"
`;

exports[`resolveDescriptors should fail descriptors for struct-decl-default-field-wrong-initializer-type 1`] = `
"<unknown>:3:22: Struct field "s" has declared type "Bool", but its initializer has incompatible type "Int"
Line 3, col 22:
  2 | 
> 3 | struct S { s: Bool = 42 }
                           ^~
  4 | 
"
`;

exports[`resolveDescriptors should fail descriptors for struct-decl-duplicate-decl 1`] = `
"<unknown>:10:1: Type "Pair" already exists
Line 10, col 1:
   9 | 
> 10 | struct Pair {
       ^~~~~~~~~~~~~
  11 |   a: Int;
"
`;

exports[`resolveDescriptors should fail descriptors for struct-decl-duplicate-field 1`] = `
"<unknown>:8:3: Field "b" already exists
Line 8, col 3:
  7 |   b: Int;
> 8 |   b: Int;
        ^~~~~~
  9 | }
"
`;

exports[`resolveDescriptors should fail descriptors for struct-decl-empty-not-allowed 1`] = `
"<unknown>:3:1: Struct "Main" must have at least one field
Line 3, col 1:
  2 | 
> 3 | struct Main { }
      ^~~~~~~~~~~~~~~
"
`;

exports[`resolveDescriptors should fail descriptors for struct-decl-mutually-recursive 1`] = `
"<unknown>:4:8: Mutually recursive types are not supported: types "A1", "A2" form a cycle
Line 4, col 8:
  3 | 
> 4 | struct A1 {
             ^~
  5 |   a: Int;
"
`;

exports[`resolveDescriptors should fail descriptors for struct-decl-remainder-in-the-middle 1`] = `"The "remainder" field can only be the last field of the struct"`;

exports[`resolveDescriptors should fail descriptors for struct-decl-self-reference 1`] = `
"<unknown>:4:8: Self-referencing types are not supported: type "A" refers to itself in its definition
Line 4, col 8:
  3 | 
> 4 | struct A {
             ^
  5 |   a: Int;
"
`;

exports[`resolveDescriptors should fail descriptors for struct-decl-self-reference-map 1`] = `
"<unknown>:4:8: Self-referencing types are not supported: type "A" refers to itself in its definition
Line 4, col 8:
  3 | 
> 4 | struct A {
             ^
  5 |   a: Int;
"
`;

exports[`resolveDescriptors should fail descriptors for trait-duplicates-in-trait-list 1`] = `
"<unknown>:7:1: The list of inherited traits for trait "Test" has duplicates
Line 7, col 1:
  6 | 
> 7 | trait Test with Foo, Foo { }
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
  8 | 
"
`;

exports[`resolveDescriptors should fail descriptors for trait-field-initialized 1`] = `
"<unknown>:2:14: Trait field cannot have an initializer
Line 2, col 14:
  1 | trait T {
> 2 |     a: Int = 42; // error
                   ^~
  3 | 
"
`;

exports[`resolveDescriptors should fail descriptors for wf-type-const 1`] = `
"<unknown>:4:19: Invalid map type. Check https://docs.tact-lang.org/book/maps#allowed-types
Line 4, col 19:
  3 | 
> 4 | const m: map<Int, String> = null;
                        ^~~~~~
  5 | 
"
`;

exports[`resolveDescriptors should fail descriptors for wf-type-contract-const 1`] = `
"<unknown>:6:23: Invalid map type. Check https://docs.tact-lang.org/book/maps#allowed-types
Line 6, col 23:
  5 | contract Test {
> 6 |     const m: map<Int, String> = null;
                            ^~~~~~
  7 | }
"
`;

exports[`resolveDescriptors should fail descriptors for wf-type-contract-const-incorrect-annotation 1`] = `
"<unknown>:6:34: "Address" type cannot have as-annotation
Line 6, col 34:
  5 | contract Test {
> 6 |     const m: map<Int, Address as uint32> = null;
                                       ^~~~~~
  7 | }
"
`;

exports[`resolveDescriptors should fail descriptors for wf-type-contract-getter 1`] = `
"<unknown>:6:29: Invalid map type. Check https://docs.tact-lang.org/book/maps#allowed-types
Line 6, col 29:
  5 | contract Test {
> 6 |     get fun foo(): map<Int, String> {
                                  ^~~~~~
  7 |         let m: map<Int, String> = null;
"
`;

exports[`resolveDescriptors should fail descriptors for wf-type-fun-param 1`] = `
"<unknown>:4:16: Invalid map type. Check https://docs.tact-lang.org/book/maps#allowed-types
Line 4, col 16:
  3 | 
> 4 | fun foo(m: map<Bool, Int>) { }
                     ^~~~
  5 | 
"
`;

exports[`resolveDescriptors should resolve descriptors for asm-extends-fun 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Slice;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Slice,
        "text": "Slice",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {
      "loadRef" => {
        "ast": {
          "attributes": [
            {
              "loc": extends,
              "type": "extends",
            },
            {
              "loc": mutates,
              "type": "mutates",
            },
          ],
          "id": 12,
          "instructions": [
            "LDREF",
          ],
          "kind": "asm_function_def",
          "loc": asm(-> 1 0) extends mutates fun loadRef(self: Slice): Cell { LDREF },
          "name": {
            "id": 7,
            "kind": "id",
            "loc": loadRef,
            "text": "loadRef",
          },
          "params": [
            {
              "id": 11,
              "kind": "typed_parameter",
              "loc": self: Slice,
              "name": {
                "id": 9,
                "kind": "id",
                "loc": self,
                "text": "self",
              },
              "type": {
                "id": 10,
                "kind": "type_id",
                "loc": Slice,
                "text": "Slice",
              },
            },
          ],
          "return": {
            "id": 8,
            "kind": "type_id",
            "loc": Cell,
            "text": "Cell",
          },
          "shuffle": {
            "args": [],
            "ret": [
              {
                "base": 10,
                "id": 5,
                "kind": "number",
                "loc": 1,
                "value": 1n,
              },
              {
                "base": 10,
                "id": 6,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
            ],
          },
        },
        "isAbstract": false,
        "isGetter": false,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": false,
        "name": "loadRef",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Cell",
          "optional": false,
        },
        "self": "Slice",
      },
    },
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Slice",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 35456,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Cell;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Cell,
        "text": "Cell",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Cell",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 26294,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for asm-extends-fun 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for asm-fun-no-arg-shuffle 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for asm-fun-no-arg-shuffle 2`] = `
[
  {
    "ast": {
      "attributes": [],
      "id": 9,
      "instructions": [
        "NOP",
      ],
      "kind": "asm_function_def",
      "loc": asm(-> 0) fun foo(x: Int): Int {
    NOP
},
      "name": {
        "id": 4,
        "kind": "id",
        "loc": foo,
        "text": "foo",
      },
      "params": [
        {
          "id": 8,
          "kind": "typed_parameter",
          "loc": x: Int,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": x,
            "text": "x",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "return": {
        "id": 5,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
      "shuffle": {
        "args": [],
        "ret": [
          {
            "base": 10,
            "id": 3,
            "kind": "number",
            "loc": 0,
            "value": 0n,
          },
        ],
      },
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "foo",
    "origin": "user",
    "params": [
      {
        "loc": x: Int,
        "name": {
          "id": 6,
          "kind": "id",
          "loc": x,
          "text": "x",
        },
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "returns": {
      "kind": "ref",
      "name": "Int",
      "optional": false,
    },
    "self": null,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for asm-fun-no-ret-shuffle 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for asm-fun-no-ret-shuffle 2`] = `
[
  {
    "ast": {
      "attributes": [],
      "id": 12,
      "instructions": [
        "DROP",
        "DROP",
      ],
      "kind": "asm_function_def",
      "loc": asm(y x) fun foo(x: Int, y: Int) {
    DROP
    DROP
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": foo,
        "text": "foo",
      },
      "params": [
        {
          "id": 8,
          "kind": "typed_parameter",
          "loc": x: Int,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": x,
            "text": "x",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "id": 11,
          "kind": "typed_parameter",
          "loc": y: Int,
          "name": {
            "id": 9,
            "kind": "id",
            "loc": y,
            "text": "y",
          },
          "type": {
            "id": 10,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "return": null,
      "shuffle": {
        "args": [
          {
            "id": 3,
            "kind": "id",
            "loc": y,
            "text": "y",
          },
          {
            "id": 4,
            "kind": "id",
            "loc": x,
            "text": "x",
          },
        ],
        "ret": [],
      },
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "foo",
    "origin": "user",
    "params": [
      {
        "loc": x: Int,
        "name": {
          "id": 6,
          "kind": "id",
          "loc": x,
          "text": "x",
        },
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "loc": y: Int,
        "name": {
          "id": 9,
          "kind": "id",
          "loc": y,
          "text": "y",
        },
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "returns": {
      "kind": "void",
    },
    "self": null,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for asm-fun-no-shuffle 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for asm-fun-no-shuffle 2`] = `
[
  {
    "ast": {
      "attributes": [],
      "id": 7,
      "instructions": [
        "DROP",
      ],
      "kind": "asm_function_def",
      "loc": asm fun foo(x: Int) {
    DROP
},
      "name": {
        "id": 3,
        "kind": "id",
        "loc": foo,
        "text": "foo",
      },
      "params": [
        {
          "id": 6,
          "kind": "typed_parameter",
          "loc": x: Int,
          "name": {
            "id": 4,
            "kind": "id",
            "loc": x,
            "text": "x",
          },
          "type": {
            "id": 5,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "return": null,
      "shuffle": {
        "args": [],
        "ret": [],
      },
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "foo",
    "origin": "user",
    "params": [
      {
        "loc": x: Int,
        "name": {
          "id": 4,
          "kind": "id",
          "loc": x,
          "text": "x",
        },
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "returns": {
      "kind": "void",
    },
    "self": null,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for asm-fun-shuffle-pair 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 6,
          "initializer": null,
          "kind": "field_decl",
          "loc": fst: Int,
          "name": {
            "id": 4,
            "kind": "id",
            "loc": fst,
            "text": "fst",
          },
          "type": {
            "id": 5,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "as": null,
          "id": 9,
          "initializer": null,
          "kind": "field_decl",
          "loc": snd: Int,
          "name": {
            "id": 7,
            "kind": "id",
            "loc": snd,
            "text": "snd",
          },
          "type": {
            "id": 8,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 10,
      "kind": "struct_decl",
      "loc": struct Pair { fst: Int; snd: Int },
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Pair,
        "text": "Pair",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "fst",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 6,
          "initializer": null,
          "kind": "field_decl",
          "loc": fst: Int,
          "name": {
            "id": 4,
            "kind": "id",
            "loc": fst,
            "text": "fst",
          },
          "type": {
            "id": 5,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": fst: Int,
        "name": "fst",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "abi": {
          "name": "snd",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 9,
          "initializer": null,
          "kind": "field_decl",
          "loc": snd: Int,
          "name": {
            "id": 7,
            "kind": "id",
            "loc": snd,
            "text": "snd",
          },
          "type": {
            "id": 8,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 1,
        "loc": snd: Int,
        "name": "snd",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "Pair",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "Pair{fst:int257,snd:int257}",
    "tlb": "_ fst:int257 snd:int257 = Pair",
    "traits": [],
    "uid": 13831,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for asm-fun-shuffle-pair 2`] = `
[
  {
    "ast": {
      "attributes": [],
      "id": 21,
      "instructions": [
        "SWAP",
      ],
      "kind": "asm_function_def",
      "loc": asm(-> 1 0) fun foo(x: Int, y: Int): Pair {
    SWAP
},
      "name": {
        "id": 13,
        "kind": "id",
        "loc": foo,
        "text": "foo",
      },
      "params": [
        {
          "id": 17,
          "kind": "typed_parameter",
          "loc": x: Int,
          "name": {
            "id": 15,
            "kind": "id",
            "loc": x,
            "text": "x",
          },
          "type": {
            "id": 16,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "id": 20,
          "kind": "typed_parameter",
          "loc": y: Int,
          "name": {
            "id": 18,
            "kind": "id",
            "loc": y,
            "text": "y",
          },
          "type": {
            "id": 19,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "return": {
        "id": 14,
        "kind": "type_id",
        "loc": Pair,
        "text": "Pair",
      },
      "shuffle": {
        "args": [],
        "ret": [
          {
            "base": 10,
            "id": 11,
            "kind": "number",
            "loc": 1,
            "value": 1n,
          },
          {
            "base": 10,
            "id": 12,
            "kind": "number",
            "loc": 0,
            "value": 0n,
          },
        ],
      },
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "foo",
    "origin": "user",
    "params": [
      {
        "loc": x: Int,
        "name": {
          "id": 15,
          "kind": "id",
          "loc": x,
          "text": "x",
        },
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "loc": y: Int,
        "name": {
          "id": 18,
          "kind": "id",
          "loc": y,
          "text": "y",
        },
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "returns": {
      "kind": "ref",
      "name": "Pair",
      "optional": false,
    },
    "self": null,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for const-decl-struct-with-default-field 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 9,
          "initializer": {
            "base": 10,
            "id": 8,
            "kind": "number",
            "loc": 42,
            "value": 42n,
          },
          "kind": "field_decl",
          "loc": s: Int = 42,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": s,
            "text": "s",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 10,
      "kind": "struct_decl",
      "loc": struct S { s: Int = 42 },
      "name": {
        "id": 5,
        "kind": "type_id",
        "loc": S,
        "text": "S",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "s",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 9,
          "initializer": {
            "base": 10,
            "id": 8,
            "kind": "number",
            "loc": 42,
            "value": 42n,
          },
          "kind": "field_decl",
          "loc": s: Int = 42,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": s,
            "text": "s",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": 42n,
        "index": 0,
        "loc": s: Int = 42,
        "name": "s",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "S",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "S{s:int257}",
    "tlb": "_ s:int257 = S",
    "traits": [],
    "uid": 27286,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for const-decl-struct-with-default-field 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for const-decl-struct-with-optional-field 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 9,
          "initializer": null,
          "kind": "field_decl",
          "loc": s: Int?,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": s,
            "text": "s",
          },
          "type": {
            "id": 8,
            "kind": "optional_type",
            "loc": Int?,
            "typeArg": {
              "id": 7,
              "kind": "type_id",
              "loc": Int,
              "text": "Int",
            },
          },
        },
      ],
      "id": 10,
      "kind": "struct_decl",
      "loc": struct S { s: Int? },
      "name": {
        "id": 5,
        "kind": "type_id",
        "loc": S,
        "text": "S",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "s",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": true,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 9,
          "initializer": null,
          "kind": "field_decl",
          "loc": s: Int?,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": s,
            "text": "s",
          },
          "type": {
            "id": 8,
            "kind": "optional_type",
            "loc": Int?,
            "typeArg": {
              "id": 7,
              "kind": "type_id",
              "loc": Int,
              "text": "Int",
            },
          },
        },
        "default": null,
        "index": 0,
        "loc": s: Int?,
        "name": "s",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": true,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "S",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "S{s:Maybe int257}",
    "tlb": "_ s:Maybe int257 = S",
    "traits": [],
    "uid": 27286,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for const-decl-struct-with-optional-field 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for contract-bounced-slice 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Slice;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Slice,
        "text": "Slice",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Slice",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 35456,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": {
            "id": 10,
            "kind": "id",
            "loc": uint32,
            "text": "uint32",
          },
          "id": 11,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int as uint32,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 12,
      "kind": "message_decl",
      "loc": message A {
  a: Int as uint32;
},
      "name": {
        "id": 7,
        "kind": "type_id",
        "loc": A,
        "text": "A",
      },
      "opcode": null,
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "format": 32,
            "kind": "simple",
            "optional": false,
            "type": "uint",
          },
        },
        "as": "uint32",
        "ast": {
          "as": {
            "id": 10,
            "kind": "id",
            "loc": uint32,
            "text": "uint32",
          },
          "id": 11,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int as uint32,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": a: Int as uint32,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": {
      "base": 10,
      "id": 0,
      "kind": "number",
      "loc": ,
      "value": 3746466057n,
    },
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "A",
    "origin": "user",
    "partialFieldCount": 1,
    "receivers": [],
    "signature": "A{a:uint32}",
    "tlb": "a#df4e8909 a:uint32 = A",
    "traits": [],
    "uid": 22757,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "id": 14,
          "kind": "contract_init",
          "loc": init() {},
          "params": [],
          "statements": [],
        },
        {
          "id": 18,
          "kind": "receiver",
          "loc": receive(src: A) {
    
  },
          "selector": {
            "kind": "internal-simple",
            "param": {
              "id": 17,
              "kind": "typed_parameter",
              "loc": src: A,
              "name": {
                "id": 15,
                "kind": "id",
                "loc": src,
                "text": "src",
              },
              "type": {
                "id": 16,
                "kind": "type_id",
                "loc": A,
                "text": "A",
              },
            },
          },
          "statements": [],
        },
        {
          "id": 22,
          "kind": "receiver",
          "loc": bounced(src: Slice) {
    
  },
          "selector": {
            "kind": "bounce",
            "param": {
              "id": 21,
              "kind": "typed_parameter",
              "loc": src: Slice,
              "name": {
                "id": 19,
                "kind": "id",
                "loc": src,
                "text": "src",
              },
              "type": {
                "id": 20,
                "kind": "type_id",
                "loc": Slice,
                "text": "Slice",
              },
            },
          },
          "statements": [],
        },
      ],
      "id": 23,
      "kind": "contract",
      "loc": contract Test {
  init() {}
  receive(src: A) {
    
  }
  
  bounced(src: Slice) {
    
  }
},
      "name": {
        "id": 13,
        "kind": "id",
        "loc": Test,
        "text": "Test",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": {
      "ast": {
        "id": 14,
        "kind": "contract_init",
        "loc": init() {},
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "Test",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [
      {
        "ast": {
          "id": 18,
          "kind": "receiver",
          "loc": receive(src: A) {
    
  },
          "selector": {
            "kind": "internal-simple",
            "param": {
              "id": 17,
              "kind": "typed_parameter",
              "loc": src: A,
              "name": {
                "id": 15,
                "kind": "id",
                "loc": src,
                "text": "src",
              },
              "type": {
                "id": 16,
                "kind": "type_id",
                "loc": A,
                "text": "A",
              },
            },
          },
          "statements": [],
        },
        "selector": {
          "kind": "internal-binary",
          "name": {
            "id": 15,
            "kind": "id",
            "loc": src,
            "text": "src",
          },
          "type": "A",
        },
      },
      {
        "ast": {
          "id": 22,
          "kind": "receiver",
          "loc": bounced(src: Slice) {
    
  },
          "selector": {
            "kind": "bounce",
            "param": {
              "id": 21,
              "kind": "typed_parameter",
              "loc": src: Slice,
              "name": {
                "id": 19,
                "kind": "id",
                "loc": src,
                "text": "src",
              },
              "type": {
                "id": 20,
                "kind": "type_id",
                "loc": Slice,
                "text": "Slice",
              },
            },
          },
          "statements": [],
        },
        "selector": {
          "kind": "bounce-fallback",
          "name": {
            "id": 19,
            "kind": "id",
            "loc": src,
            "text": "src",
          },
        },
      },
    ],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 6,
          "kind": "trait",
          "loc": trait BaseTrait {
    
},
          "name": {
            "id": 5,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 44104,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for contract-bounced-slice 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for contract-bounced-too-small-not-detected 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": {
            "id": 10,
            "kind": "id",
            "loc": uint32,
            "text": "uint32",
          },
          "id": 11,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int as uint32,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "as": null,
          "id": 14,
          "initializer": null,
          "kind": "field_decl",
          "loc": b: Bool,
          "name": {
            "id": 12,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 13,
            "kind": "type_id",
            "loc": Bool,
            "text": "Bool",
          },
        },
        {
          "as": {
            "id": 17,
            "kind": "id",
            "loc": uint256,
            "text": "uint256",
          },
          "id": 18,
          "initializer": null,
          "kind": "field_decl",
          "loc": c: Int as uint256,
          "name": {
            "id": 15,
            "kind": "id",
            "loc": c,
            "text": "c",
          },
          "type": {
            "id": 16,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 19,
      "kind": "message_decl",
      "loc": message A {
  a: Int as uint32;
  b: Bool;
  c: Int as uint256;
},
      "name": {
        "id": 7,
        "kind": "type_id",
        "loc": A,
        "text": "A",
      },
      "opcode": null,
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "format": 32,
            "kind": "simple",
            "optional": false,
            "type": "uint",
          },
        },
        "as": "uint32",
        "ast": {
          "as": {
            "id": 10,
            "kind": "id",
            "loc": uint32,
            "text": "uint32",
          },
          "id": 11,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int as uint32,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": a: Int as uint32,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "abi": {
          "name": "b",
          "type": {
            "kind": "simple",
            "optional": false,
            "type": "bool",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 14,
          "initializer": null,
          "kind": "field_decl",
          "loc": b: Bool,
          "name": {
            "id": 12,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 13,
            "kind": "type_id",
            "loc": Bool,
            "text": "Bool",
          },
        },
        "default": undefined,
        "index": 1,
        "loc": b: Bool,
        "name": "b",
        "type": {
          "kind": "ref",
          "name": "Bool",
          "optional": false,
        },
      },
      {
        "abi": {
          "name": "c",
          "type": {
            "format": 256,
            "kind": "simple",
            "optional": false,
            "type": "uint",
          },
        },
        "as": "uint256",
        "ast": {
          "as": {
            "id": 17,
            "kind": "id",
            "loc": uint256,
            "text": "uint256",
          },
          "id": 18,
          "initializer": null,
          "kind": "field_decl",
          "loc": c: Int as uint256,
          "name": {
            "id": 15,
            "kind": "id",
            "loc": c,
            "text": "c",
          },
          "type": {
            "id": 16,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 2,
        "loc": c: Int as uint256,
        "name": "c",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": {
      "base": 10,
      "id": 0,
      "kind": "number",
      "loc": ,
      "value": 2219696518n,
    },
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "A",
    "origin": "user",
    "partialFieldCount": 2,
    "receivers": [],
    "signature": "A{a:uint32,b:bool,c:uint256}",
    "tlb": "a#844de186 a:uint32 b:bool c:uint256 = A",
    "traits": [],
    "uid": 22757,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "id": 21,
          "kind": "contract_init",
          "loc": init() {},
          "params": [],
          "statements": [],
        },
        {
          "id": 25,
          "kind": "receiver",
          "loc": receive(src: A) {
    
  },
          "selector": {
            "kind": "internal-simple",
            "param": {
              "id": 24,
              "kind": "typed_parameter",
              "loc": src: A,
              "name": {
                "id": 22,
                "kind": "id",
                "loc": src,
                "text": "src",
              },
              "type": {
                "id": 23,
                "kind": "type_id",
                "loc": A,
                "text": "A",
              },
            },
          },
          "statements": [],
        },
        {
          "id": 36,
          "kind": "receiver",
          "loc": bounced(src: bounced<A>) {
    let x: Int = src.c;
  },
          "selector": {
            "kind": "bounce",
            "param": {
              "id": 29,
              "kind": "typed_parameter",
              "loc": src: bounced<A>,
              "name": {
                "id": 26,
                "kind": "id",
                "loc": src,
                "text": "src",
              },
              "type": {
                "id": 28,
                "kind": "bounced_message_type",
                "loc": bounced<A>,
                "messageType": {
                  "id": 27,
                  "kind": "type_id",
                  "loc": A,
                  "text": "A",
                },
              },
            },
          },
          "statements": [
            {
              "expression": {
                "aggregate": {
                  "id": 32,
                  "kind": "id",
                  "loc": src,
                  "text": "src",
                },
                "field": {
                  "id": 33,
                  "kind": "id",
                  "loc": c,
                  "text": "c",
                },
                "id": 34,
                "kind": "field_access",
                "loc": src.c,
              },
              "id": 35,
              "kind": "statement_let",
              "loc": let x: Int = src.c;,
              "name": {
                "id": 30,
                "kind": "id",
                "loc": x,
                "text": "x",
              },
              "type": {
                "id": 31,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
        },
      ],
      "id": 37,
      "kind": "contract",
      "loc": contract Test {
  init() {}
  receive(src: A) {
    
  }
  
  bounced(src: bounced<A>) {
    let x: Int = src.c;
  }
},
      "name": {
        "id": 20,
        "kind": "id",
        "loc": Test,
        "text": "Test",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": {
      "ast": {
        "id": 21,
        "kind": "contract_init",
        "loc": init() {},
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "Test",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [
      {
        "ast": {
          "id": 25,
          "kind": "receiver",
          "loc": receive(src: A) {
    
  },
          "selector": {
            "kind": "internal-simple",
            "param": {
              "id": 24,
              "kind": "typed_parameter",
              "loc": src: A,
              "name": {
                "id": 22,
                "kind": "id",
                "loc": src,
                "text": "src",
              },
              "type": {
                "id": 23,
                "kind": "type_id",
                "loc": A,
                "text": "A",
              },
            },
          },
          "statements": [],
        },
        "selector": {
          "kind": "internal-binary",
          "name": {
            "id": 22,
            "kind": "id",
            "loc": src,
            "text": "src",
          },
          "type": "A",
        },
      },
      {
        "ast": {
          "id": 36,
          "kind": "receiver",
          "loc": bounced(src: bounced<A>) {
    let x: Int = src.c;
  },
          "selector": {
            "kind": "bounce",
            "param": {
              "id": 29,
              "kind": "typed_parameter",
              "loc": src: bounced<A>,
              "name": {
                "id": 26,
                "kind": "id",
                "loc": src,
                "text": "src",
              },
              "type": {
                "id": 28,
                "kind": "bounced_message_type",
                "loc": bounced<A>,
                "messageType": {
                  "id": 27,
                  "kind": "type_id",
                  "loc": A,
                  "text": "A",
                },
              },
            },
          },
          "statements": [
            {
              "expression": {
                "aggregate": {
                  "id": 32,
                  "kind": "id",
                  "loc": src,
                  "text": "src",
                },
                "field": {
                  "id": 33,
                  "kind": "id",
                  "loc": c,
                  "text": "c",
                },
                "id": 34,
                "kind": "field_access",
                "loc": src.c,
              },
              "id": 35,
              "kind": "statement_let",
              "loc": let x: Int = src.c;,
              "name": {
                "id": 30,
                "kind": "id",
                "loc": x,
                "text": "x",
              },
              "type": {
                "id": 31,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
        },
        "selector": {
          "bounced": true,
          "kind": "bounce-binary",
          "name": {
            "id": 26,
            "kind": "id",
            "loc": src,
            "text": "src",
          },
          "type": "A",
        },
      },
    ],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 6,
          "kind": "trait",
          "loc": trait BaseTrait {
    
},
          "name": {
            "id": 5,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 44104,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for contract-bounced-too-small-not-detected 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for contract-const-override-abstract 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "attributes": [
            {
              "loc": abstract,
              "type": "abstract",
            },
          ],
          "id": 8,
          "kind": "constant_decl",
          "loc": abstract const Foo: Int;,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": Foo,
            "text": "Foo",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 9,
      "kind": "trait",
      "loc": trait T {
  abstract const Foo: Int;
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": T,
        "text": "T",
      },
      "traits": [],
    },
    "constants": [
      {
        "ast": {
          "attributes": [
            {
              "loc": abstract,
              "type": "abstract",
            },
          ],
          "id": 8,
          "kind": "constant_decl",
          "loc": abstract const Foo: Int;,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": Foo,
            "text": "Foo",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "loc": abstract const Foo: Int;,
        "name": "Foo",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "value": undefined,
      },
    ],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "T",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait { },
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 6769,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "attributes": [
            {
              "loc": override,
              "type": "override",
            },
          ],
          "id": 14,
          "initializer": {
            "base": 10,
            "id": 13,
            "kind": "number",
            "loc": 42,
            "value": 42n,
          },
          "kind": "constant_def",
          "loc": override const Foo: Int = 42;,
          "name": {
            "id": 11,
            "kind": "id",
            "loc": Foo,
            "text": "Foo",
          },
          "type": {
            "id": 12,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 16,
      "kind": "contract",
      "loc": contract TestContract with T {
  override const Foo: Int = 42;
},
      "name": {
        "id": 10,
        "kind": "id",
        "loc": TestContract,
        "text": "TestContract",
      },
      "traits": [
        {
          "id": 15,
          "kind": "id",
          "loc": T,
          "text": "T",
        },
      ],
    },
    "constants": [
      {
        "ast": {
          "attributes": [
            {
              "loc": override,
              "type": "override",
            },
          ],
          "id": 14,
          "initializer": {
            "base": 10,
            "id": 13,
            "kind": "number",
            "loc": 42,
            "value": 42n,
          },
          "kind": "constant_def",
          "loc": override const Foo: Int = 42;,
          "name": {
            "id": 11,
            "kind": "id",
            "loc": Foo,
            "text": "Foo",
          },
          "type": {
            "id": 12,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "loc": override const Foo: Int = 42;,
        "name": "Foo",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "value": 42n,
      },
    ],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": {
      "ast": {
        "id": 18,
        "kind": "contract_init",
        "loc": contract TestContract with T {
  override const Foo: Int = 42;
},
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "TestContract",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait { },
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
      {
        "ast": {
          "attributes": [],
          "declarations": [
            {
              "attributes": [
                {
                  "loc": abstract,
                  "type": "abstract",
                },
              ],
              "id": 8,
              "kind": "constant_decl",
              "loc": abstract const Foo: Int;,
              "name": {
                "id": 6,
                "kind": "id",
                "loc": Foo,
                "text": "Foo",
              },
              "type": {
                "id": 7,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
          "id": 9,
          "kind": "trait",
          "loc": trait T {
  abstract const Foo: Int;
},
          "name": {
            "id": 5,
            "kind": "id",
            "loc": T,
            "text": "T",
          },
          "traits": [],
        },
        "constants": [
          {
            "ast": {
              "attributes": [
                {
                  "loc": abstract,
                  "type": "abstract",
                },
              ],
              "id": 8,
              "kind": "constant_decl",
              "loc": abstract const Foo: Int;,
              "name": {
                "id": 6,
                "kind": "id",
                "loc": Foo,
                "text": "Foo",
              },
              "type": {
                "id": 7,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
            "loc": abstract const Foo: Int;,
            "name": "Foo",
            "type": {
              "kind": "ref",
              "name": "Int",
              "optional": false,
            },
            "value": undefined,
          },
        ],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "T",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [
          {
            "ast": {
              "attributes": [],
              "declarations": [],
              "id": 4,
              "kind": "trait",
              "loc": trait BaseTrait { },
              "name": {
                "id": 3,
                "kind": "id",
                "loc": BaseTrait,
                "text": "BaseTrait",
              },
              "traits": [],
            },
            "constants": [],
            "dependsOn": [],
            "fields": [],
            "functions": Map {},
            "header": null,
            "init": null,
            "interfaces": [],
            "kind": "trait",
            "name": "BaseTrait",
            "origin": "user",
            "partialFieldCount": 0,
            "receivers": [],
            "signature": null,
            "tlb": null,
            "traits": [],
            "uid": 1020,
          },
        ],
        "uid": 6769,
      },
    ],
    "uid": 63070,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for contract-const-override-abstract 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for contract-const-override-virtual 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "attributes": [
            {
              "loc": virtual,
              "type": "virtual",
            },
          ],
          "id": 9,
          "initializer": {
            "base": 10,
            "id": 8,
            "kind": "number",
            "loc": 41,
            "value": 41n,
          },
          "kind": "constant_def",
          "loc": virtual const Foo: Int = 41;,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": Foo,
            "text": "Foo",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 10,
      "kind": "trait",
      "loc": trait T {
   virtual const Foo: Int = 41;
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": T,
        "text": "T",
      },
      "traits": [],
    },
    "constants": [
      {
        "ast": {
          "attributes": [
            {
              "loc": virtual,
              "type": "virtual",
            },
          ],
          "id": 9,
          "initializer": {
            "base": 10,
            "id": 8,
            "kind": "number",
            "loc": 41,
            "value": 41n,
          },
          "kind": "constant_def",
          "loc": virtual const Foo: Int = 41;,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": Foo,
            "text": "Foo",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "loc": virtual const Foo: Int = 41;,
        "name": "Foo",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "value": 41n,
      },
    ],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "T",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait { },
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 6769,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "attributes": [
            {
              "loc": override,
              "type": "override",
            },
          ],
          "id": 15,
          "initializer": {
            "base": 10,
            "id": 14,
            "kind": "number",
            "loc": 42,
            "value": 42n,
          },
          "kind": "constant_def",
          "loc": override const Foo: Int = 42;,
          "name": {
            "id": 12,
            "kind": "id",
            "loc": Foo,
            "text": "Foo",
          },
          "type": {
            "id": 13,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 17,
      "kind": "contract",
      "loc": contract TestContract with T {
  override const Foo: Int = 42;
},
      "name": {
        "id": 11,
        "kind": "id",
        "loc": TestContract,
        "text": "TestContract",
      },
      "traits": [
        {
          "id": 16,
          "kind": "id",
          "loc": T,
          "text": "T",
        },
      ],
    },
    "constants": [
      {
        "ast": {
          "attributes": [
            {
              "loc": override,
              "type": "override",
            },
          ],
          "id": 15,
          "initializer": {
            "base": 10,
            "id": 14,
            "kind": "number",
            "loc": 42,
            "value": 42n,
          },
          "kind": "constant_def",
          "loc": override const Foo: Int = 42;,
          "name": {
            "id": 12,
            "kind": "id",
            "loc": Foo,
            "text": "Foo",
          },
          "type": {
            "id": 13,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "loc": override const Foo: Int = 42;,
        "name": "Foo",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "value": 42n,
      },
    ],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": {
      "ast": {
        "id": 19,
        "kind": "contract_init",
        "loc": contract TestContract with T {
  override const Foo: Int = 42;
},
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "TestContract",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait { },
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
      {
        "ast": {
          "attributes": [],
          "declarations": [
            {
              "attributes": [
                {
                  "loc": virtual,
                  "type": "virtual",
                },
              ],
              "id": 9,
              "initializer": {
                "base": 10,
                "id": 8,
                "kind": "number",
                "loc": 41,
                "value": 41n,
              },
              "kind": "constant_def",
              "loc": virtual const Foo: Int = 41;,
              "name": {
                "id": 6,
                "kind": "id",
                "loc": Foo,
                "text": "Foo",
              },
              "type": {
                "id": 7,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
          "id": 10,
          "kind": "trait",
          "loc": trait T {
   virtual const Foo: Int = 41;
},
          "name": {
            "id": 5,
            "kind": "id",
            "loc": T,
            "text": "T",
          },
          "traits": [],
        },
        "constants": [
          {
            "ast": {
              "attributes": [
                {
                  "loc": virtual,
                  "type": "virtual",
                },
              ],
              "id": 9,
              "initializer": {
                "base": 10,
                "id": 8,
                "kind": "number",
                "loc": 41,
                "value": 41n,
              },
              "kind": "constant_def",
              "loc": virtual const Foo: Int = 41;,
              "name": {
                "id": 6,
                "kind": "id",
                "loc": Foo,
                "text": "Foo",
              },
              "type": {
                "id": 7,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
            "loc": virtual const Foo: Int = 41;,
            "name": "Foo",
            "type": {
              "kind": "ref",
              "name": "Int",
              "optional": false,
            },
            "value": 41n,
          },
        ],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "T",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [
          {
            "ast": {
              "attributes": [],
              "declarations": [],
              "id": 4,
              "kind": "trait",
              "loc": trait BaseTrait { },
              "name": {
                "id": 3,
                "kind": "id",
                "loc": BaseTrait,
                "text": "BaseTrait",
              },
              "traits": [],
            },
            "constants": [],
            "dependsOn": [],
            "fields": [],
            "functions": Map {},
            "header": null,
            "init": null,
            "interfaces": [],
            "kind": "trait",
            "name": "BaseTrait",
            "origin": "user",
            "partialFieldCount": 0,
            "receivers": [],
            "signature": null,
            "tlb": null,
            "traits": [],
            "uid": 1020,
          },
        ],
        "uid": 6769,
      },
    ],
    "uid": 63070,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for contract-const-override-virtual 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for contract-external-fallback-receiver 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": {
            "id": 8,
            "kind": "id",
            "loc": uint32,
            "text": "uint32",
          },
          "id": 9,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int as uint32,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 10,
      "kind": "message_decl",
      "loc": message A {
    a: Int as uint32;
},
      "name": {
        "id": 5,
        "kind": "type_id",
        "loc": A,
        "text": "A",
      },
      "opcode": null,
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "format": 32,
            "kind": "simple",
            "optional": false,
            "type": "uint",
          },
        },
        "as": "uint32",
        "ast": {
          "as": {
            "id": 8,
            "kind": "id",
            "loc": uint32,
            "text": "uint32",
          },
          "id": 9,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int as uint32,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": a: Int as uint32,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": {
      "base": 10,
      "id": 0,
      "kind": "number",
      "loc": ,
      "value": 3746466057n,
    },
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "A",
    "origin": "user",
    "partialFieldCount": 1,
    "receivers": [],
    "signature": "A{a:uint32}",
    "tlb": "a#df4e8909 a:uint32 = A",
    "traits": [],
    "uid": 22757,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "id": 17,
          "kind": "receiver",
          "loc": external(msg: A) {
        42;
    },
          "selector": {
            "kind": "external-simple",
            "param": {
              "id": 14,
              "kind": "typed_parameter",
              "loc": msg: A,
              "name": {
                "id": 12,
                "kind": "id",
                "loc": msg,
                "text": "msg",
              },
              "type": {
                "id": 13,
                "kind": "type_id",
                "loc": A,
                "text": "A",
              },
            },
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 15,
                "kind": "number",
                "loc": 42,
                "value": 42n,
              },
              "id": 16,
              "kind": "statement_expression",
              "loc": 42;,
            },
          ],
        },
        {
          "id": 20,
          "kind": "receiver",
          "loc": external() {
        42;
    },
          "selector": {
            "kind": "external-fallback",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 18,
                "kind": "number",
                "loc": 42,
                "value": 42n,
              },
              "id": 19,
              "kind": "statement_expression",
              "loc": 42;,
            },
          ],
        },
      ],
      "id": 21,
      "kind": "contract",
      "loc": contract Test {
    external(msg: A) {
        42;
    }

    external() {
        42;
    }
},
      "name": {
        "id": 11,
        "kind": "id",
        "loc": Test,
        "text": "Test",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": {
      "ast": {
        "id": 23,
        "kind": "contract_init",
        "loc": contract Test {
    external(msg: A) {
        42;
    }

    external() {
        42;
    }
},
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "Test",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [
      {
        "ast": {
          "id": 17,
          "kind": "receiver",
          "loc": external(msg: A) {
        42;
    },
          "selector": {
            "kind": "external-simple",
            "param": {
              "id": 14,
              "kind": "typed_parameter",
              "loc": msg: A,
              "name": {
                "id": 12,
                "kind": "id",
                "loc": msg,
                "text": "msg",
              },
              "type": {
                "id": 13,
                "kind": "type_id",
                "loc": A,
                "text": "A",
              },
            },
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 15,
                "kind": "number",
                "loc": 42,
                "value": 42n,
              },
              "id": 16,
              "kind": "statement_expression",
              "loc": 42;,
            },
          ],
        },
        "selector": {
          "kind": "external-binary",
          "name": {
            "id": 12,
            "kind": "id",
            "loc": msg,
            "text": "msg",
          },
          "type": "A",
        },
      },
      {
        "ast": {
          "id": 20,
          "kind": "receiver",
          "loc": external() {
        42;
    },
          "selector": {
            "kind": "external-fallback",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 18,
                "kind": "number",
                "loc": 42,
                "value": 42n,
              },
              "id": 19,
              "kind": "statement_expression",
              "loc": 42;,
            },
          ],
        },
        "selector": {
          "kind": "external-empty",
        },
      },
    ],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait {
    
},
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 44104,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for contract-external-fallback-receiver 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for contract-getter-override-abstract 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "attributes": [
            {
              "loc": abstract,
              "type": "abstract",
            },
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 8,
          "kind": "function_decl",
          "loc": abstract get fun getter(): Int;,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": getter,
            "text": "getter",
          },
          "params": [],
          "return": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 9,
      "kind": "trait",
      "loc": trait T {
  abstract get fun getter(): Int;
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": T,
        "text": "T",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {
      "getter" => {
        "ast": {
          "attributes": [
            {
              "loc": abstract,
              "type": "abstract",
            },
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 8,
          "kind": "function_decl",
          "loc": abstract get fun getter(): Int;,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": getter,
            "text": "getter",
          },
          "params": [],
          "return": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "isAbstract": true,
        "isGetter": true,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": false,
        "name": "getter",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "self": "T",
      },
    },
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "T",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait { },
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 6769,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "attributes": [
            {
              "loc": override,
              "type": "override",
            },
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 15,
          "kind": "function_def",
          "loc": override get fun getter(): Int { return 0 },
          "name": {
            "id": 11,
            "kind": "id",
            "loc": getter,
            "text": "getter",
          },
          "params": [],
          "return": {
            "id": 12,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 13,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 14,
              "kind": "statement_return",
              "loc": return 0,
            },
          ],
        },
      ],
      "id": 17,
      "kind": "contract",
      "loc": contract TestContract with T {
  override get fun getter(): Int { return 0 }
},
      "name": {
        "id": 10,
        "kind": "id",
        "loc": TestContract,
        "text": "TestContract",
      },
      "traits": [
        {
          "id": 16,
          "kind": "id",
          "loc": T,
          "text": "T",
        },
      ],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {
      "getter" => {
        "ast": {
          "attributes": [
            {
              "loc": override,
              "type": "override",
            },
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 15,
          "kind": "function_def",
          "loc": override get fun getter(): Int { return 0 },
          "name": {
            "id": 11,
            "kind": "id",
            "loc": getter,
            "text": "getter",
          },
          "params": [],
          "return": {
            "id": 12,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 13,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 14,
              "kind": "statement_return",
              "loc": return 0,
            },
          ],
        },
        "isAbstract": false,
        "isGetter": true,
        "isInline": false,
        "isMutating": true,
        "isOverride": true,
        "isVirtual": false,
        "name": "getter",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "self": "TestContract",
      },
    },
    "header": null,
    "init": {
      "ast": {
        "id": 19,
        "kind": "contract_init",
        "loc": contract TestContract with T {
  override get fun getter(): Int { return 0 }
},
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "TestContract",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait { },
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
      {
        "ast": {
          "attributes": [],
          "declarations": [
            {
              "attributes": [
                {
                  "loc": abstract,
                  "type": "abstract",
                },
                {
                  "loc": get,
                  "type": "get",
                },
              ],
              "id": 8,
              "kind": "function_decl",
              "loc": abstract get fun getter(): Int;,
              "name": {
                "id": 6,
                "kind": "id",
                "loc": getter,
                "text": "getter",
              },
              "params": [],
              "return": {
                "id": 7,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
          "id": 9,
          "kind": "trait",
          "loc": trait T {
  abstract get fun getter(): Int;
},
          "name": {
            "id": 5,
            "kind": "id",
            "loc": T,
            "text": "T",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {
          "getter" => {
            "ast": {
              "attributes": [
                {
                  "loc": abstract,
                  "type": "abstract",
                },
                {
                  "loc": get,
                  "type": "get",
                },
              ],
              "id": 8,
              "kind": "function_decl",
              "loc": abstract get fun getter(): Int;,
              "name": {
                "id": 6,
                "kind": "id",
                "loc": getter,
                "text": "getter",
              },
              "params": [],
              "return": {
                "id": 7,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
            "isAbstract": true,
            "isGetter": true,
            "isInline": false,
            "isMutating": true,
            "isOverride": false,
            "isVirtual": false,
            "name": "getter",
            "origin": "user",
            "params": [],
            "returns": {
              "kind": "ref",
              "name": "Int",
              "optional": false,
            },
            "self": "T",
          },
        },
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "T",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [
          {
            "ast": {
              "attributes": [],
              "declarations": [],
              "id": 4,
              "kind": "trait",
              "loc": trait BaseTrait { },
              "name": {
                "id": 3,
                "kind": "id",
                "loc": BaseTrait,
                "text": "BaseTrait",
              },
              "traits": [],
            },
            "constants": [],
            "dependsOn": [],
            "fields": [],
            "functions": Map {},
            "header": null,
            "init": null,
            "interfaces": [],
            "kind": "trait",
            "name": "BaseTrait",
            "origin": "user",
            "partialFieldCount": 0,
            "receivers": [],
            "signature": null,
            "tlb": null,
            "traits": [],
            "uid": 1020,
          },
        ],
        "uid": 6769,
      },
    ],
    "uid": 63070,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for contract-getter-override-abstract 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for contract-getter-override-virtual 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "attributes": [
            {
              "loc": virtual,
              "type": "virtual",
            },
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 10,
          "kind": "function_def",
          "loc": virtual get fun getter(): Int { return 42 },
          "name": {
            "id": 6,
            "kind": "id",
            "loc": getter,
            "text": "getter",
          },
          "params": [],
          "return": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 8,
                "kind": "number",
                "loc": 42,
                "value": 42n,
              },
              "id": 9,
              "kind": "statement_return",
              "loc": return 42,
            },
          ],
        },
      ],
      "id": 11,
      "kind": "trait",
      "loc": trait T {
   virtual get fun getter(): Int { return 42 }
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": T,
        "text": "T",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {
      "getter" => {
        "ast": {
          "attributes": [
            {
              "loc": virtual,
              "type": "virtual",
            },
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 10,
          "kind": "function_def",
          "loc": virtual get fun getter(): Int { return 42 },
          "name": {
            "id": 6,
            "kind": "id",
            "loc": getter,
            "text": "getter",
          },
          "params": [],
          "return": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 8,
                "kind": "number",
                "loc": 42,
                "value": 42n,
              },
              "id": 9,
              "kind": "statement_return",
              "loc": return 42,
            },
          ],
        },
        "isAbstract": false,
        "isGetter": true,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": true,
        "name": "getter",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "self": "T",
      },
    },
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "T",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait { },
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 6769,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "attributes": [
            {
              "loc": override,
              "type": "override",
            },
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 17,
          "kind": "function_def",
          "loc": override get fun getter(): Int { return 43 },
          "name": {
            "id": 13,
            "kind": "id",
            "loc": getter,
            "text": "getter",
          },
          "params": [],
          "return": {
            "id": 14,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 15,
                "kind": "number",
                "loc": 43,
                "value": 43n,
              },
              "id": 16,
              "kind": "statement_return",
              "loc": return 43,
            },
          ],
        },
      ],
      "id": 19,
      "kind": "contract",
      "loc": contract TestContract with T {
  override get fun getter(): Int { return 43 }
},
      "name": {
        "id": 12,
        "kind": "id",
        "loc": TestContract,
        "text": "TestContract",
      },
      "traits": [
        {
          "id": 18,
          "kind": "id",
          "loc": T,
          "text": "T",
        },
      ],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {
      "getter" => {
        "ast": {
          "attributes": [
            {
              "loc": override,
              "type": "override",
            },
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 17,
          "kind": "function_def",
          "loc": override get fun getter(): Int { return 43 },
          "name": {
            "id": 13,
            "kind": "id",
            "loc": getter,
            "text": "getter",
          },
          "params": [],
          "return": {
            "id": 14,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 15,
                "kind": "number",
                "loc": 43,
                "value": 43n,
              },
              "id": 16,
              "kind": "statement_return",
              "loc": return 43,
            },
          ],
        },
        "isAbstract": false,
        "isGetter": true,
        "isInline": false,
        "isMutating": true,
        "isOverride": true,
        "isVirtual": false,
        "name": "getter",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "self": "TestContract",
      },
    },
    "header": null,
    "init": {
      "ast": {
        "id": 21,
        "kind": "contract_init",
        "loc": contract TestContract with T {
  override get fun getter(): Int { return 43 }
},
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "TestContract",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait { },
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
      {
        "ast": {
          "attributes": [],
          "declarations": [
            {
              "attributes": [
                {
                  "loc": virtual,
                  "type": "virtual",
                },
                {
                  "loc": get,
                  "type": "get",
                },
              ],
              "id": 10,
              "kind": "function_def",
              "loc": virtual get fun getter(): Int { return 42 },
              "name": {
                "id": 6,
                "kind": "id",
                "loc": getter,
                "text": "getter",
              },
              "params": [],
              "return": {
                "id": 7,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
              "statements": [
                {
                  "expression": {
                    "base": 10,
                    "id": 8,
                    "kind": "number",
                    "loc": 42,
                    "value": 42n,
                  },
                  "id": 9,
                  "kind": "statement_return",
                  "loc": return 42,
                },
              ],
            },
          ],
          "id": 11,
          "kind": "trait",
          "loc": trait T {
   virtual get fun getter(): Int { return 42 }
},
          "name": {
            "id": 5,
            "kind": "id",
            "loc": T,
            "text": "T",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {
          "getter" => {
            "ast": {
              "attributes": [
                {
                  "loc": virtual,
                  "type": "virtual",
                },
                {
                  "loc": get,
                  "type": "get",
                },
              ],
              "id": 10,
              "kind": "function_def",
              "loc": virtual get fun getter(): Int { return 42 },
              "name": {
                "id": 6,
                "kind": "id",
                "loc": getter,
                "text": "getter",
              },
              "params": [],
              "return": {
                "id": 7,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
              "statements": [
                {
                  "expression": {
                    "base": 10,
                    "id": 8,
                    "kind": "number",
                    "loc": 42,
                    "value": 42n,
                  },
                  "id": 9,
                  "kind": "statement_return",
                  "loc": return 42,
                },
              ],
            },
            "isAbstract": false,
            "isGetter": true,
            "isInline": false,
            "isMutating": true,
            "isOverride": false,
            "isVirtual": true,
            "name": "getter",
            "origin": "user",
            "params": [],
            "returns": {
              "kind": "ref",
              "name": "Int",
              "optional": false,
            },
            "self": "T",
          },
        },
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "T",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [
          {
            "ast": {
              "attributes": [],
              "declarations": [],
              "id": 4,
              "kind": "trait",
              "loc": trait BaseTrait { },
              "name": {
                "id": 3,
                "kind": "id",
                "loc": BaseTrait,
                "text": "BaseTrait",
              },
              "traits": [],
            },
            "constants": [],
            "dependsOn": [],
            "fields": [],
            "functions": Map {},
            "header": null,
            "init": null,
            "interfaces": [],
            "kind": "trait",
            "name": "BaseTrait",
            "origin": "user",
            "partialFieldCount": 0,
            "receivers": [],
            "signature": null,
            "tlb": null,
            "traits": [],
            "uid": 1020,
          },
        ],
        "uid": 6769,
      },
    ],
    "uid": 63070,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for contract-getter-override-virtual 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for init-vars-analysis-uninit-storage-vars 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "as": null,
          "id": 10,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "as": null,
          "id": 13,
          "initializer": null,
          "kind": "field_decl",
          "loc": b: Bool,
          "name": {
            "id": 11,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 12,
            "kind": "type_id",
            "loc": Bool,
            "text": "Bool",
          },
        },
        {
          "id": 14,
          "kind": "contract_init",
          "loc": init() {
        
    },
          "params": [],
          "statements": [],
        },
        {
          "attributes": [],
          "id": 16,
          "kind": "function_def",
          "loc": fun hello() {
        
    },
          "name": {
            "id": 15,
            "kind": "id",
            "loc": hello,
            "text": "hello",
          },
          "params": [],
          "return": null,
          "statements": [],
        },
        {
          "attributes": [],
          "id": 18,
          "kind": "function_def",
          "loc": fun hello2() {
        
    },
          "name": {
            "id": 17,
            "kind": "id",
            "loc": hello2,
            "text": "hello2",
          },
          "params": [],
          "return": null,
          "statements": [],
        },
      ],
      "id": 19,
      "kind": "contract",
      "loc": contract HelloWorld {
    a: Int;
    b: Bool;

    init() {
        
    }

    fun hello() {
        
    }

    fun hello2() {
        
    }
},
      "name": {
        "id": 7,
        "kind": "id",
        "loc": HelloWorld,
        "text": "HelloWorld",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 10,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": a: Int,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "abi": {
          "name": "b",
          "type": {
            "kind": "simple",
            "optional": false,
            "type": "bool",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 13,
          "initializer": null,
          "kind": "field_decl",
          "loc": b: Bool,
          "name": {
            "id": 11,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 12,
            "kind": "type_id",
            "loc": Bool,
            "text": "Bool",
          },
        },
        "default": undefined,
        "index": 1,
        "loc": b: Bool,
        "name": "b",
        "type": {
          "kind": "ref",
          "name": "Bool",
          "optional": false,
        },
      },
    ],
    "functions": Map {
      "hello" => {
        "ast": {
          "attributes": [],
          "id": 16,
          "kind": "function_def",
          "loc": fun hello() {
        
    },
          "name": {
            "id": 15,
            "kind": "id",
            "loc": hello,
            "text": "hello",
          },
          "params": [],
          "return": null,
          "statements": [],
        },
        "isAbstract": false,
        "isGetter": false,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": false,
        "name": "hello",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "void",
        },
        "self": "HelloWorld",
      },
      "hello2" => {
        "ast": {
          "attributes": [],
          "id": 18,
          "kind": "function_def",
          "loc": fun hello2() {
        
    },
          "name": {
            "id": 17,
            "kind": "id",
            "loc": hello2,
            "text": "hello2",
          },
          "params": [],
          "return": null,
          "statements": [],
        },
        "isAbstract": false,
        "isGetter": false,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": false,
        "name": "hello2",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "void",
        },
        "self": "HelloWorld",
      },
    },
    "header": null,
    "init": {
      "ast": {
        "id": 14,
        "kind": "contract_init",
        "loc": init() {
        
    },
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "HelloWorld",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 6,
          "kind": "trait",
          "loc": trait BaseTrait {
    
},
          "name": {
            "id": 5,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 31498,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for init-vars-analysis-uninit-storage-vars 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for item-funs-with-errors-in-bodies1 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for item-funs-with-errors-in-bodies1 2`] = `
[
  {
    "ast": {
      "attributes": [],
      "id": 11,
      "kind": "function_def",
      "loc": fun testFunc(): Int {
    return 0;
},
      "name": {
        "id": 7,
        "kind": "id",
        "loc": testFunc,
        "text": "testFunc",
      },
      "params": [],
      "return": {
        "id": 8,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
      "statements": [
        {
          "expression": {
            "base": 10,
            "id": 9,
            "kind": "number",
            "loc": 0,
            "value": 0n,
          },
          "id": 10,
          "kind": "statement_return",
          "loc": return 0;,
        },
      ],
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "testFunc",
    "origin": "user",
    "params": [],
    "returns": {
      "kind": "ref",
      "name": "Int",
      "optional": false,
    },
    "self": null,
  },
  {
    "ast": {
      "attributes": [],
      "id": 15,
      "kind": "function_def",
      "loc": fun testFunc2() {
    return 0;
},
      "name": {
        "id": 12,
        "kind": "id",
        "loc": testFunc2,
        "text": "testFunc2",
      },
      "params": [],
      "return": null,
      "statements": [
        {
          "expression": {
            "base": 10,
            "id": 13,
            "kind": "number",
            "loc": 0,
            "value": 0n,
          },
          "id": 14,
          "kind": "statement_return",
          "loc": return 0;,
        },
      ],
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "testFunc2",
    "origin": "user",
    "params": [],
    "returns": {
      "kind": "void",
    },
    "self": null,
  },
  {
    "ast": {
      "attributes": [],
      "id": 25,
      "kind": "function_def",
      "loc": fun testFunc3(a: Int, b: Bool) {
    return 0;
},
      "name": {
        "id": 16,
        "kind": "id",
        "loc": testFunc3,
        "text": "testFunc3",
      },
      "params": [
        {
          "id": 19,
          "kind": "typed_parameter",
          "loc": a: Int,
          "name": {
            "id": 17,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 18,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "id": 22,
          "kind": "typed_parameter",
          "loc": b: Bool,
          "name": {
            "id": 20,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 21,
            "kind": "type_id",
            "loc": Bool,
            "text": "Bool",
          },
        },
      ],
      "return": null,
      "statements": [
        {
          "expression": {
            "base": 10,
            "id": 23,
            "kind": "number",
            "loc": 0,
            "value": 0n,
          },
          "id": 24,
          "kind": "statement_return",
          "loc": return 0;,
        },
      ],
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "testFunc3",
    "origin": "user",
    "params": [
      {
        "loc": a: Int,
        "name": {
          "id": 17,
          "kind": "id",
          "loc": a,
          "text": "a",
        },
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "loc": b: Bool,
        "name": {
          "id": 20,
          "kind": "id",
          "loc": b,
          "text": "b",
        },
        "type": {
          "kind": "ref",
          "name": "Bool",
          "optional": false,
        },
      },
    ],
    "returns": {
      "kind": "void",
    },
    "self": null,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for item-funs-with-errors-in-bodies2 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 10,
          "initializer": null,
          "kind": "field_decl",
          "loc": p: Int,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": p,
            "text": "p",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 11,
      "kind": "struct_decl",
      "loc": struct Point {
    p: Int;
},
      "name": {
        "id": 7,
        "kind": "type_id",
        "loc": Point,
        "text": "Point",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "p",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 10,
          "initializer": null,
          "kind": "field_decl",
          "loc": p: Int,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": p,
            "text": "p",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": p: Int,
        "name": "p",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "Point",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "Point{p:int257}",
    "tlb": "_ p:int257 = Point",
    "traits": [],
    "uid": 35778,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "as": null,
          "id": 15,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int,
          "name": {
            "id": 13,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 14,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "id": 24,
          "kind": "contract_init",
          "loc": init(a: Int) {
        self.a = a;
    },
          "params": [
            {
              "id": 18,
              "kind": "typed_parameter",
              "loc": a: Int,
              "name": {
                "id": 16,
                "kind": "id",
                "loc": a,
                "text": "a",
              },
              "type": {
                "id": 17,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
          "statements": [
            {
              "expression": {
                "id": 22,
                "kind": "id",
                "loc": a,
                "text": "a",
              },
              "id": 23,
              "kind": "statement_assign",
              "loc": self.a = a;,
              "path": {
                "aggregate": {
                  "id": 19,
                  "kind": "id",
                  "loc": self,
                  "text": "self",
                },
                "field": {
                  "id": 20,
                  "kind": "id",
                  "loc": a,
                  "text": "a",
                },
                "id": 21,
                "kind": "field_access",
                "loc": self.a,
              },
            },
          ],
        },
        {
          "attributes": [
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 29,
          "kind": "function_def",
          "loc": get fun hello(): Int {
        return 0;
    },
          "name": {
            "id": 25,
            "kind": "id",
            "loc": hello,
            "text": "hello",
          },
          "params": [],
          "return": {
            "id": 26,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 27,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 28,
              "kind": "statement_return",
              "loc": return 0;,
            },
          ],
        },
        {
          "attributes": [
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 34,
          "kind": "function_def",
          "loc": get fun hello2(): Point {
        return 0;
    },
          "name": {
            "id": 30,
            "kind": "id",
            "loc": hello2,
            "text": "hello2",
          },
          "params": [],
          "return": {
            "id": 31,
            "kind": "type_id",
            "loc": Point,
            "text": "Point",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 32,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 33,
              "kind": "statement_return",
              "loc": return 0;,
            },
          ],
        },
      ],
      "id": 35,
      "kind": "contract",
      "loc": contract Main {
    a: Int;
    init(a: Int) {
        self.a = a;
    }

    get fun hello(): Int {
        return 0;
    }
    get fun hello2(): Point {
        return 0;
    }
},
      "name": {
        "id": 12,
        "kind": "id",
        "loc": Main,
        "text": "Main",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 15,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int,
          "name": {
            "id": 13,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 14,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": a: Int,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {
      "hello" => {
        "ast": {
          "attributes": [
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 29,
          "kind": "function_def",
          "loc": get fun hello(): Int {
        return 0;
    },
          "name": {
            "id": 25,
            "kind": "id",
            "loc": hello,
            "text": "hello",
          },
          "params": [],
          "return": {
            "id": 26,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 27,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 28,
              "kind": "statement_return",
              "loc": return 0;,
            },
          ],
        },
        "isAbstract": false,
        "isGetter": true,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": false,
        "name": "hello",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "self": "Main",
      },
      "hello2" => {
        "ast": {
          "attributes": [
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 34,
          "kind": "function_def",
          "loc": get fun hello2(): Point {
        return 0;
    },
          "name": {
            "id": 30,
            "kind": "id",
            "loc": hello2,
            "text": "hello2",
          },
          "params": [],
          "return": {
            "id": 31,
            "kind": "type_id",
            "loc": Point,
            "text": "Point",
          },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 32,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 33,
              "kind": "statement_return",
              "loc": return 0;,
            },
          ],
        },
        "isAbstract": false,
        "isGetter": true,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": false,
        "name": "hello2",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Point",
          "optional": false,
        },
        "self": "Main",
      },
    },
    "header": null,
    "init": {
      "ast": {
        "id": 24,
        "kind": "contract_init",
        "loc": init(a: Int) {
        self.a = a;
    },
        "params": [
          {
            "id": 18,
            "kind": "typed_parameter",
            "loc": a: Int,
            "name": {
              "id": 16,
              "kind": "id",
              "loc": a,
              "text": "a",
            },
            "type": {
              "id": 17,
              "kind": "type_id",
              "loc": Int,
              "text": "Int",
            },
          },
        ],
        "statements": [
          {
            "expression": {
              "id": 22,
              "kind": "id",
              "loc": a,
              "text": "a",
            },
            "id": 23,
            "kind": "statement_assign",
            "loc": self.a = a;,
            "path": {
              "aggregate": {
                "id": 19,
                "kind": "id",
                "loc": self,
                "text": "self",
              },
              "field": {
                "id": 20,
                "kind": "id",
                "loc": a,
                "text": "a",
              },
              "id": 21,
              "kind": "field_access",
              "loc": self.a,
            },
          },
        ],
      },
      "params": [
        {
          "as": null,
          "loc": a: Int,
          "name": {
            "id": 16,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "kind": "ref",
            "name": "Int",
            "optional": false,
          },
        },
      ],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "Main",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 6,
          "kind": "trait",
          "loc": trait BaseTrait {
    
},
          "name": {
            "id": 5,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 51099,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for item-funs-with-errors-in-bodies2 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for item-method 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {
      "inc" => {
        "ast": {
          "attributes": [
            {
              "loc": extends,
              "type": "extends",
            },
          ],
          "id": 16,
          "kind": "function_def",
          "loc": extends fun inc(self: Int): Int {
    return self + 1;
},
          "name": {
            "id": 7,
            "kind": "id",
            "loc": inc,
            "text": "inc",
          },
          "params": [
            {
              "id": 11,
              "kind": "typed_parameter",
              "loc": self: Int,
              "name": {
                "id": 9,
                "kind": "id",
                "loc": self,
                "text": "self",
              },
              "type": {
                "id": 10,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
          "return": {
            "id": 8,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "id": 14,
                "kind": "op_binary",
                "left": {
                  "id": 12,
                  "kind": "id",
                  "loc": self,
                  "text": "self",
                },
                "loc": self + 1,
                "op": "+",
                "right": {
                  "base": 10,
                  "id": 13,
                  "kind": "number",
                  "loc": 1,
                  "value": 1n,
                },
              },
              "id": 15,
              "kind": "statement_return",
              "loc": return self + 1;,
            },
          ],
        },
        "isAbstract": false,
        "isGetter": false,
        "isInline": false,
        "isMutating": false,
        "isOverride": false,
        "isVirtual": false,
        "name": "inc",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "self": "Int",
      },
    },
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for item-method 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for item-native-decl 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for item-native-decl 2`] = `
[
  {
    "ast": {
      "attributes": [],
      "id": 13,
      "kind": "native_function_decl",
      "loc": @name(hello_world)
native sample(a: Int): Int;,
      "name": {
        "id": 7,
        "kind": "id",
        "loc": sample,
        "text": "sample",
      },
      "nativeName": {
        "id": 8,
        "kind": "func_id",
        "loc": hello_world,
        "text": "hello_world",
      },
      "params": [
        {
          "id": 12,
          "kind": "typed_parameter",
          "loc": a: Int,
          "name": {
            "id": 10,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 11,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "return": {
        "id": 9,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "sample",
    "origin": "user",
    "params": [
      {
        "loc": a: Int,
        "name": {
          "id": 10,
          "kind": "id",
          "loc": a,
          "text": "a",
        },
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "returns": {
      "kind": "ref",
      "name": "Int",
      "optional": false,
    },
    "self": null,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for item-native-mutating-method 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {
      "inc" => {
        "ast": {
          "attributes": [
            {
              "loc": mutates,
              "type": "mutates",
            },
            {
              "loc": extends,
              "type": "extends",
            },
          ],
          "id": 13,
          "kind": "native_function_decl",
          "loc": @name(inc)
mutates extends native inc(self: Int): Int;,
          "name": {
            "id": 7,
            "kind": "id",
            "loc": inc,
            "text": "inc",
          },
          "nativeName": {
            "id": 8,
            "kind": "func_id",
            "loc": inc,
            "text": "inc",
          },
          "params": [
            {
              "id": 12,
              "kind": "typed_parameter",
              "loc": self: Int,
              "name": {
                "id": 10,
                "kind": "id",
                "loc": self,
                "text": "self",
              },
              "type": {
                "id": 11,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
          "return": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "isAbstract": false,
        "isGetter": false,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": false,
        "name": "inc",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "self": "Int",
      },
    },
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for item-native-mutating-method 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for map-value-as-coins 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [
        {
          "as": null,
          "id": 11,
          "initializer": null,
          "kind": "field_decl",
          "loc": m: map<Int, Int as coins>,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": m,
            "text": "m",
          },
          "type": {
            "id": 10,
            "keyStorageType": null,
            "keyType": {
              "id": 7,
              "kind": "type_id",
              "loc": Int,
              "text": "Int",
            },
            "kind": "map_type",
            "loc": map<Int, Int as coins>,
            "valueStorageType": {
              "id": 9,
              "kind": "id",
              "loc": coins,
              "text": "coins",
            },
            "valueType": {
              "id": 8,
              "kind": "type_id",
              "loc": Int,
              "text": "Int",
            },
          },
        },
        {
          "attributes": [
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 48,
          "kind": "function_def",
          "loc": get fun test(): Int {
        let m: map<Int, Int as coins> = emptyMap();
        m.set(1, 2);
        self.m.set(1, 2);
        return m.get(1) + self.m.get(1);
    },
          "name": {
            "id": 12,
            "kind": "id",
            "loc": test,
            "text": "test",
          },
          "params": [],
          "return": {
            "id": 13,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "args": [],
                "function": {
                  "id": 19,
                  "kind": "id",
                  "loc": emptyMap,
                  "text": "emptyMap",
                },
                "id": 20,
                "kind": "static_call",
                "loc": emptyMap(),
              },
              "id": 21,
              "kind": "statement_let",
              "loc": let m: map<Int, Int as coins> = emptyMap();,
              "name": {
                "id": 14,
                "kind": "id",
                "loc": m,
                "text": "m",
              },
              "type": {
                "id": 18,
                "keyStorageType": null,
                "keyType": {
                  "id": 15,
                  "kind": "type_id",
                  "loc": Int,
                  "text": "Int",
                },
                "kind": "map_type",
                "loc": map<Int, Int as coins>,
                "valueStorageType": {
                  "id": 17,
                  "kind": "id",
                  "loc": coins,
                  "text": "coins",
                },
                "valueType": {
                  "id": 16,
                  "kind": "type_id",
                  "loc": Int,
                  "text": "Int",
                },
              },
            },
            {
              "expression": {
                "args": [
                  {
                    "base": 10,
                    "id": 24,
                    "kind": "number",
                    "loc": 1,
                    "value": 1n,
                  },
                  {
                    "base": 10,
                    "id": 25,
                    "kind": "number",
                    "loc": 2,
                    "value": 2n,
                  },
                ],
                "id": 26,
                "kind": "method_call",
                "loc": m.set(1, 2),
                "method": {
                  "id": 23,
                  "kind": "id",
                  "loc": set,
                  "text": "set",
                },
                "self": {
                  "id": 22,
                  "kind": "id",
                  "loc": m,
                  "text": "m",
                },
              },
              "id": 27,
              "kind": "statement_expression",
              "loc": m.set(1, 2);,
            },
            {
              "expression": {
                "args": [
                  {
                    "base": 10,
                    "id": 32,
                    "kind": "number",
                    "loc": 1,
                    "value": 1n,
                  },
                  {
                    "base": 10,
                    "id": 33,
                    "kind": "number",
                    "loc": 2,
                    "value": 2n,
                  },
                ],
                "id": 34,
                "kind": "method_call",
                "loc": self.m.set(1, 2),
                "method": {
                  "id": 31,
                  "kind": "id",
                  "loc": set,
                  "text": "set",
                },
                "self": {
                  "aggregate": {
                    "id": 28,
                    "kind": "id",
                    "loc": self,
                    "text": "self",
                  },
                  "field": {
                    "id": 29,
                    "kind": "id",
                    "loc": m,
                    "text": "m",
                  },
                  "id": 30,
                  "kind": "field_access",
                  "loc": self.m,
                },
              },
              "id": 35,
              "kind": "statement_expression",
              "loc": self.m.set(1, 2);,
            },
            {
              "expression": {
                "id": 46,
                "kind": "op_binary",
                "left": {
                  "args": [
                    {
                      "base": 10,
                      "id": 38,
                      "kind": "number",
                      "loc": 1,
                      "value": 1n,
                    },
                  ],
                  "id": 39,
                  "kind": "method_call",
                  "loc": m.get(1),
                  "method": {
                    "id": 37,
                    "kind": "id",
                    "loc": get,
                    "text": "get",
                  },
                  "self": {
                    "id": 36,
                    "kind": "id",
                    "loc": m,
                    "text": "m",
                  },
                },
                "loc": m.get(1) + self.m.get(1),
                "op": "+",
                "right": {
                  "args": [
                    {
                      "base": 10,
                      "id": 44,
                      "kind": "number",
                      "loc": 1,
                      "value": 1n,
                    },
                  ],
                  "id": 45,
                  "kind": "method_call",
                  "loc": self.m.get(1),
                  "method": {
                    "id": 43,
                    "kind": "id",
                    "loc": get,
                    "text": "get",
                  },
                  "self": {
                    "aggregate": {
                      "id": 40,
                      "kind": "id",
                      "loc": self,
                      "text": "self",
                    },
                    "field": {
                      "id": 41,
                      "kind": "id",
                      "loc": m,
                      "text": "m",
                    },
                    "id": 42,
                    "kind": "field_access",
                    "loc": self.m,
                  },
                },
              },
              "id": 47,
              "kind": "statement_return",
              "loc": return m.get(1) + self.m.get(1);,
            },
          ],
        },
      ],
      "id": 49,
      "kind": "contract",
      "loc": contract Main {
    m: map<Int, Int as coins>;

    get fun test(): Int {
        let m: map<Int, Int as coins> = emptyMap();
        m.set(1, 2);
        self.m.set(1, 2);
        return m.get(1) + self.m.get(1);
    }
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": Main,
        "text": "Main",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "m",
          "type": {
            "key": "int",
            "keyFormat": undefined,
            "kind": "dict",
            "value": "uint",
            "valueFormat": "coins",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 11,
          "initializer": null,
          "kind": "field_decl",
          "loc": m: map<Int, Int as coins>,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": m,
            "text": "m",
          },
          "type": {
            "id": 10,
            "keyStorageType": null,
            "keyType": {
              "id": 7,
              "kind": "type_id",
              "loc": Int,
              "text": "Int",
            },
            "kind": "map_type",
            "loc": map<Int, Int as coins>,
            "valueStorageType": {
              "id": 9,
              "kind": "id",
              "loc": coins,
              "text": "coins",
            },
            "valueType": {
              "id": 8,
              "kind": "type_id",
              "loc": Int,
              "text": "Int",
            },
          },
        },
        "default": undefined,
        "index": 0,
        "loc": m: map<Int, Int as coins>,
        "name": "m",
        "type": {
          "key": "Int",
          "keyAs": null,
          "kind": "map",
          "value": "Int",
          "valueAs": "coins",
        },
      },
    ],
    "functions": Map {
      "test" => {
        "ast": {
          "attributes": [
            {
              "loc": get,
              "type": "get",
            },
          ],
          "id": 48,
          "kind": "function_def",
          "loc": get fun test(): Int {
        let m: map<Int, Int as coins> = emptyMap();
        m.set(1, 2);
        self.m.set(1, 2);
        return m.get(1) + self.m.get(1);
    },
          "name": {
            "id": 12,
            "kind": "id",
            "loc": test,
            "text": "test",
          },
          "params": [],
          "return": {
            "id": 13,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
          "statements": [
            {
              "expression": {
                "args": [],
                "function": {
                  "id": 19,
                  "kind": "id",
                  "loc": emptyMap,
                  "text": "emptyMap",
                },
                "id": 20,
                "kind": "static_call",
                "loc": emptyMap(),
              },
              "id": 21,
              "kind": "statement_let",
              "loc": let m: map<Int, Int as coins> = emptyMap();,
              "name": {
                "id": 14,
                "kind": "id",
                "loc": m,
                "text": "m",
              },
              "type": {
                "id": 18,
                "keyStorageType": null,
                "keyType": {
                  "id": 15,
                  "kind": "type_id",
                  "loc": Int,
                  "text": "Int",
                },
                "kind": "map_type",
                "loc": map<Int, Int as coins>,
                "valueStorageType": {
                  "id": 17,
                  "kind": "id",
                  "loc": coins,
                  "text": "coins",
                },
                "valueType": {
                  "id": 16,
                  "kind": "type_id",
                  "loc": Int,
                  "text": "Int",
                },
              },
            },
            {
              "expression": {
                "args": [
                  {
                    "base": 10,
                    "id": 24,
                    "kind": "number",
                    "loc": 1,
                    "value": 1n,
                  },
                  {
                    "base": 10,
                    "id": 25,
                    "kind": "number",
                    "loc": 2,
                    "value": 2n,
                  },
                ],
                "id": 26,
                "kind": "method_call",
                "loc": m.set(1, 2),
                "method": {
                  "id": 23,
                  "kind": "id",
                  "loc": set,
                  "text": "set",
                },
                "self": {
                  "id": 22,
                  "kind": "id",
                  "loc": m,
                  "text": "m",
                },
              },
              "id": 27,
              "kind": "statement_expression",
              "loc": m.set(1, 2);,
            },
            {
              "expression": {
                "args": [
                  {
                    "base": 10,
                    "id": 32,
                    "kind": "number",
                    "loc": 1,
                    "value": 1n,
                  },
                  {
                    "base": 10,
                    "id": 33,
                    "kind": "number",
                    "loc": 2,
                    "value": 2n,
                  },
                ],
                "id": 34,
                "kind": "method_call",
                "loc": self.m.set(1, 2),
                "method": {
                  "id": 31,
                  "kind": "id",
                  "loc": set,
                  "text": "set",
                },
                "self": {
                  "aggregate": {
                    "id": 28,
                    "kind": "id",
                    "loc": self,
                    "text": "self",
                  },
                  "field": {
                    "id": 29,
                    "kind": "id",
                    "loc": m,
                    "text": "m",
                  },
                  "id": 30,
                  "kind": "field_access",
                  "loc": self.m,
                },
              },
              "id": 35,
              "kind": "statement_expression",
              "loc": self.m.set(1, 2);,
            },
            {
              "expression": {
                "id": 46,
                "kind": "op_binary",
                "left": {
                  "args": [
                    {
                      "base": 10,
                      "id": 38,
                      "kind": "number",
                      "loc": 1,
                      "value": 1n,
                    },
                  ],
                  "id": 39,
                  "kind": "method_call",
                  "loc": m.get(1),
                  "method": {
                    "id": 37,
                    "kind": "id",
                    "loc": get,
                    "text": "get",
                  },
                  "self": {
                    "id": 36,
                    "kind": "id",
                    "loc": m,
                    "text": "m",
                  },
                },
                "loc": m.get(1) + self.m.get(1),
                "op": "+",
                "right": {
                  "args": [
                    {
                      "base": 10,
                      "id": 44,
                      "kind": "number",
                      "loc": 1,
                      "value": 1n,
                    },
                  ],
                  "id": 45,
                  "kind": "method_call",
                  "loc": self.m.get(1),
                  "method": {
                    "id": 43,
                    "kind": "id",
                    "loc": get,
                    "text": "get",
                  },
                  "self": {
                    "aggregate": {
                      "id": 40,
                      "kind": "id",
                      "loc": self,
                      "text": "self",
                    },
                    "field": {
                      "id": 41,
                      "kind": "id",
                      "loc": m,
                      "text": "m",
                    },
                    "id": 42,
                    "kind": "field_access",
                    "loc": self.m,
                  },
                },
              },
              "id": 47,
              "kind": "statement_return",
              "loc": return m.get(1) + self.m.get(1);,
            },
          ],
        },
        "isAbstract": false,
        "isGetter": true,
        "isInline": false,
        "isMutating": true,
        "isOverride": false,
        "isVirtual": false,
        "name": "test",
        "origin": "user",
        "params": [],
        "returns": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
        "self": "Main",
      },
    },
    "header": null,
    "init": {
      "ast": {
        "id": 51,
        "kind": "contract_init",
        "loc": contract Main {
    m: map<Int, Int as coins>;

    get fun test(): Int {
        let m: map<Int, Int as coins> = emptyMap();
        m.set(1, 2);
        self.m.set(1, 2);
        return m.get(1) + self.m.get(1);
    }
},
        "params": [],
        "statements": [],
      },
      "params": [],
    },
    "interfaces": [],
    "kind": "contract",
    "name": "Main",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [
      {
        "ast": {
          "attributes": [],
          "declarations": [],
          "id": 4,
          "kind": "trait",
          "loc": trait BaseTrait {
    
},
          "name": {
            "id": 3,
            "kind": "id",
            "loc": BaseTrait,
            "text": "BaseTrait",
          },
          "traits": [],
        },
        "constants": [],
        "dependsOn": [],
        "fields": [],
        "functions": Map {},
        "header": null,
        "init": null,
        "interfaces": [],
        "kind": "trait",
        "name": "BaseTrait",
        "origin": "user",
        "partialFieldCount": 0,
        "receivers": [],
        "signature": null,
        "tlb": null,
        "traits": [],
        "uid": 1020,
      },
    ],
    "uid": 51099,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for map-value-as-coins 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for scope-loops 1`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for scope-loops 2`] = `
[
  {
    "ast": {
      "attributes": [],
      "id": 12,
      "kind": "function_def",
      "loc": fun scopeUntil() {
    do {
        let a: Int = 0;
    } until (true);
    let a: String = "abc";
},
      "name": {
        "id": 1,
        "kind": "id",
        "loc": scopeUntil,
        "text": "scopeUntil",
      },
      "params": [],
      "return": null,
      "statements": [
        {
          "condition": {
            "id": 2,
            "kind": "boolean",
            "loc": true,
            "value": true,
          },
          "id": 7,
          "kind": "statement_until",
          "loc": do {
        let a: Int = 0;
    } until (true);,
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 5,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 6,
              "kind": "statement_let",
              "loc": let a: Int = 0;,
              "name": {
                "id": 3,
                "kind": "id",
                "loc": a,
                "text": "a",
              },
              "type": {
                "id": 4,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
        },
        {
          "expression": {
            "id": 10,
            "kind": "string",
            "loc": "abc",
            "value": "abc",
          },
          "id": 11,
          "kind": "statement_let",
          "loc": let a: String = "abc";,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": String,
            "text": "String",
          },
        },
      ],
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "scopeUntil",
    "origin": "user",
    "params": [],
    "returns": {
      "kind": "void",
    },
    "self": null,
  },
  {
    "ast": {
      "attributes": [],
      "id": 24,
      "kind": "function_def",
      "loc": fun scopeRepeat() {
    repeat (1) {
        let a: Int = 0;
    }
    let a: String = "abc";
},
      "name": {
        "id": 13,
        "kind": "id",
        "loc": scopeRepeat,
        "text": "scopeRepeat",
      },
      "params": [],
      "return": null,
      "statements": [
        {
          "id": 19,
          "iterations": {
            "base": 10,
            "id": 14,
            "kind": "number",
            "loc": 1,
            "value": 1n,
          },
          "kind": "statement_repeat",
          "loc": repeat (1) {
        let a: Int = 0;
    },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 17,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 18,
              "kind": "statement_let",
              "loc": let a: Int = 0;,
              "name": {
                "id": 15,
                "kind": "id",
                "loc": a,
                "text": "a",
              },
              "type": {
                "id": 16,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
        },
        {
          "expression": {
            "id": 22,
            "kind": "string",
            "loc": "abc",
            "value": "abc",
          },
          "id": 23,
          "kind": "statement_let",
          "loc": let a: String = "abc";,
          "name": {
            "id": 20,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 21,
            "kind": "type_id",
            "loc": String,
            "text": "String",
          },
        },
      ],
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "scopeRepeat",
    "origin": "user",
    "params": [],
    "returns": {
      "kind": "void",
    },
    "self": null,
  },
  {
    "ast": {
      "attributes": [],
      "id": 36,
      "kind": "function_def",
      "loc": fun scopeWhile() {
    while (true) {
        let a: Int = 0;
    }
    let a: String = "abc";
},
      "name": {
        "id": 25,
        "kind": "id",
        "loc": scopeWhile,
        "text": "scopeWhile",
      },
      "params": [],
      "return": null,
      "statements": [
        {
          "condition": {
            "id": 26,
            "kind": "boolean",
            "loc": true,
            "value": true,
          },
          "id": 31,
          "kind": "statement_while",
          "loc": while (true) {
        let a: Int = 0;
    },
          "statements": [
            {
              "expression": {
                "base": 10,
                "id": 29,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 30,
              "kind": "statement_let",
              "loc": let a: Int = 0;,
              "name": {
                "id": 27,
                "kind": "id",
                "loc": a,
                "text": "a",
              },
              "type": {
                "id": 28,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
        },
        {
          "expression": {
            "id": 34,
            "kind": "string",
            "loc": "abc",
            "value": "abc",
          },
          "id": 35,
          "kind": "statement_let",
          "loc": let a: String = "abc";,
          "name": {
            "id": 32,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 33,
            "kind": "type_id",
            "loc": String,
            "text": "String",
          },
        },
      ],
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "scopeWhile",
    "origin": "user",
    "params": [],
    "returns": {
      "kind": "void",
    },
    "self": null,
  },
  {
    "ast": {
      "attributes": [],
      "id": 48,
      "kind": "function_def",
      "loc": fun scopeIf() {
    if (true) {
        let a: Int = 0;
    }
    let a: String = "abc";
},
      "name": {
        "id": 37,
        "kind": "id",
        "loc": scopeIf,
        "text": "scopeIf",
      },
      "params": [],
      "return": null,
      "statements": [
        {
          "condition": {
            "id": 38,
            "kind": "boolean",
            "loc": true,
            "value": true,
          },
          "elseif": null,
          "falseStatements": null,
          "id": 43,
          "kind": "statement_condition",
          "loc": if (true) {
        let a: Int = 0;
    },
          "trueStatements": [
            {
              "expression": {
                "base": 10,
                "id": 41,
                "kind": "number",
                "loc": 0,
                "value": 0n,
              },
              "id": 42,
              "kind": "statement_let",
              "loc": let a: Int = 0;,
              "name": {
                "id": 39,
                "kind": "id",
                "loc": a,
                "text": "a",
              },
              "type": {
                "id": 40,
                "kind": "type_id",
                "loc": Int,
                "text": "Int",
              },
            },
          ],
        },
        {
          "expression": {
            "id": 46,
            "kind": "string",
            "loc": "abc",
            "value": "abc",
          },
          "id": 47,
          "kind": "statement_let",
          "loc": let a: String = "abc";,
          "name": {
            "id": 44,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 45,
            "kind": "type_id",
            "loc": String,
            "text": "String",
          },
        },
      ],
    },
    "isAbstract": false,
    "isGetter": false,
    "isInline": false,
    "isMutating": false,
    "isOverride": false,
    "isVirtual": false,
    "name": "scopeIf",
    "origin": "user",
    "params": [],
    "returns": {
      "kind": "void",
    },
    "self": null,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for struct-decl-default-field 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 9,
          "initializer": {
            "base": 10,
            "id": 8,
            "kind": "number",
            "loc": 42,
            "value": 42n,
          },
          "kind": "field_decl",
          "loc": a: Int = 42,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 10,
      "kind": "struct_decl",
      "loc": struct S { a: Int = 42 },
      "name": {
        "id": 5,
        "kind": "type_id",
        "loc": S,
        "text": "S",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 9,
          "initializer": {
            "base": 10,
            "id": 8,
            "kind": "number",
            "loc": 42,
            "value": 42n,
          },
          "kind": "field_decl",
          "loc": a: Int = 42,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": 42n,
        "index": 0,
        "loc": a: Int = 42,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "S",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "S{a:int257}",
    "tlb": "_ a:int257 = S",
    "traits": [],
    "uid": 27286,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for struct-decl-default-field 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for struct-decl-nested 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 10,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "as": null,
          "id": 13,
          "initializer": null,
          "kind": "field_decl",
          "loc": b: Bool,
          "name": {
            "id": 11,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 12,
            "kind": "type_id",
            "loc": Bool,
            "text": "Bool",
          },
        },
      ],
      "id": 14,
      "kind": "struct_decl",
      "loc": struct Struct1 {
    a: Int;
    b: Bool;
},
      "name": {
        "id": 7,
        "kind": "type_id",
        "loc": Struct1,
        "text": "Struct1",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 10,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": a: Int,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "abi": {
          "name": "b",
          "type": {
            "kind": "simple",
            "optional": false,
            "type": "bool",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 13,
          "initializer": null,
          "kind": "field_decl",
          "loc": b: Bool,
          "name": {
            "id": 11,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 12,
            "kind": "type_id",
            "loc": Bool,
            "text": "Bool",
          },
        },
        "default": undefined,
        "index": 1,
        "loc": b: Bool,
        "name": "b",
        "type": {
          "kind": "ref",
          "name": "Bool",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "Struct1",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "Struct1{a:int257,b:bool}",
    "tlb": "_ a:int257 b:bool = Struct1",
    "traits": [],
    "uid": 63177,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 18,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Struct1,
          "name": {
            "id": 16,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 17,
            "kind": "type_id",
            "loc": Struct1,
            "text": "Struct1",
          },
        },
      ],
      "id": 19,
      "kind": "struct_decl",
      "loc": struct Struct2 {
    a: Struct1;
},
      "name": {
        "id": 15,
        "kind": "type_id",
        "loc": Struct2,
        "text": "Struct2",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "kind": "simple",
            "optional": false,
            "type": "Struct1",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 18,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Struct1,
          "name": {
            "id": 16,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 17,
            "kind": "type_id",
            "loc": Struct1,
            "text": "Struct1",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": a: Struct1,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Struct1",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "Struct2",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "Struct2{a:Struct1{a:int257,b:bool}}",
    "tlb": "_ a:Struct1{a:int257,b:bool} = Struct2",
    "traits": [],
    "uid": 50858,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for struct-decl-nested 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for struct-decl-non-rec-types 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 4,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 3,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 8,
          "initializer": null,
          "kind": "field_decl",
          "loc": key: Int,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": key,
            "text": "key",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "as": null,
          "id": 12,
          "initializer": null,
          "kind": "field_decl",
          "loc": value: SomeStruct?,
          "name": {
            "id": 9,
            "kind": "id",
            "loc": value,
            "text": "value",
          },
          "type": {
            "id": 11,
            "kind": "optional_type",
            "loc": SomeStruct?,
            "typeArg": {
              "id": 10,
              "kind": "type_id",
              "loc": SomeStruct,
              "text": "SomeStruct",
            },
          },
        },
      ],
      "id": 13,
      "kind": "message_decl",
      "loc": message SetIntMap4 {
    key: Int;
    value: SomeStruct?;
},
      "name": {
        "id": 5,
        "kind": "type_id",
        "loc": SetIntMap4,
        "text": "SetIntMap4",
      },
      "opcode": null,
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "key",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 8,
          "initializer": null,
          "kind": "field_decl",
          "loc": key: Int,
          "name": {
            "id": 6,
            "kind": "id",
            "loc": key,
            "text": "key",
          },
          "type": {
            "id": 7,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": key: Int,
        "name": "key",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "abi": {
          "name": "value",
          "type": {
            "kind": "simple",
            "optional": true,
            "type": "SomeStruct",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 12,
          "initializer": null,
          "kind": "field_decl",
          "loc": value: SomeStruct?,
          "name": {
            "id": 9,
            "kind": "id",
            "loc": value,
            "text": "value",
          },
          "type": {
            "id": 11,
            "kind": "optional_type",
            "loc": SomeStruct?,
            "typeArg": {
              "id": 10,
              "kind": "type_id",
              "loc": SomeStruct,
              "text": "SomeStruct",
            },
          },
        },
        "default": null,
        "index": 1,
        "loc": value: SomeStruct?,
        "name": "value",
        "type": {
          "kind": "ref",
          "name": "SomeStruct",
          "optional": true,
        },
      },
    ],
    "functions": Map {},
    "header": {
      "base": 10,
      "id": 0,
      "kind": "number",
      "loc": ,
      "value": 383013829n,
    },
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "SetIntMap4",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "SetIntMap4{key:int257,value:Maybe SomeStruct{value:int257}}",
    "tlb": "set_int_map4#16d453c5 key:int257 value:Maybe SomeStruct{value:int257} = SetIntMap4",
    "traits": [],
    "uid": 24351,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 17,
          "initializer": null,
          "kind": "field_decl",
          "loc": value: Int,
          "name": {
            "id": 15,
            "kind": "id",
            "loc": value,
            "text": "value",
          },
          "type": {
            "id": 16,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
      ],
      "id": 18,
      "kind": "struct_decl",
      "loc": struct SomeStruct { value: Int },
      "name": {
        "id": 14,
        "kind": "type_id",
        "loc": SomeStruct,
        "text": "SomeStruct",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "value",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 17,
          "initializer": null,
          "kind": "field_decl",
          "loc": value: Int,
          "name": {
            "id": 15,
            "kind": "id",
            "loc": value,
            "text": "value",
          },
          "type": {
            "id": 16,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": value: Int,
        "name": "value",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "SomeStruct",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "SomeStruct{value:int257}",
    "tlb": "_ value:int257 = SomeStruct",
    "traits": [],
    "uid": 61480,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for struct-decl-non-rec-types 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for struct-decl-remainder 1`] = `
[
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 2,
      "kind": "trait",
      "loc": trait BaseTrait { },
      "name": {
        "id": 1,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 6,
      "kind": "primitive_type_decl",
      "loc": primitive Cell;,
      "name": {
        "id": 5,
        "kind": "type_id",
        "loc": Cell,
        "text": "Cell",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Cell",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 26294,
  },
  {
    "ast": {
      "fields": [
        {
          "as": null,
          "id": 10,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "as": null,
          "id": 13,
          "initializer": null,
          "kind": "field_decl",
          "loc": b: Int,
          "name": {
            "id": 11,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 12,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        {
          "as": {
            "id": 16,
            "kind": "id",
            "loc": remaining,
            "text": "remaining",
          },
          "id": 17,
          "initializer": null,
          "kind": "field_decl",
          "loc": s: Cell as remaining,
          "name": {
            "id": 14,
            "kind": "id",
            "loc": s,
            "text": "s",
          },
          "type": {
            "id": 15,
            "kind": "type_id",
            "loc": Cell,
            "text": "Cell",
          },
        },
      ],
      "id": 18,
      "kind": "struct_decl",
      "loc": struct Test {
    a: Int;
    b: Int;
    s: Cell as remaining;
},
      "name": {
        "id": 7,
        "kind": "type_id",
        "loc": Test,
        "text": "Test",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [
      {
        "abi": {
          "name": "a",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 10,
          "initializer": null,
          "kind": "field_decl",
          "loc": a: Int,
          "name": {
            "id": 8,
            "kind": "id",
            "loc": a,
            "text": "a",
          },
          "type": {
            "id": 9,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 0,
        "loc": a: Int,
        "name": "a",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "abi": {
          "name": "b",
          "type": {
            "format": 257,
            "kind": "simple",
            "optional": false,
            "type": "int",
          },
        },
        "as": null,
        "ast": {
          "as": null,
          "id": 13,
          "initializer": null,
          "kind": "field_decl",
          "loc": b: Int,
          "name": {
            "id": 11,
            "kind": "id",
            "loc": b,
            "text": "b",
          },
          "type": {
            "id": 12,
            "kind": "type_id",
            "loc": Int,
            "text": "Int",
          },
        },
        "default": undefined,
        "index": 1,
        "loc": b: Int,
        "name": "b",
        "type": {
          "kind": "ref",
          "name": "Int",
          "optional": false,
        },
      },
      {
        "abi": {
          "name": "s",
          "type": {
            "format": "remainder",
            "kind": "simple",
            "optional": false,
            "type": "cell",
          },
        },
        "as": "remaining",
        "ast": {
          "as": {
            "id": 16,
            "kind": "id",
            "loc": remaining,
            "text": "remaining",
          },
          "id": 17,
          "initializer": null,
          "kind": "field_decl",
          "loc": s: Cell as remaining,
          "name": {
            "id": 14,
            "kind": "id",
            "loc": s,
            "text": "s",
          },
          "type": {
            "id": 15,
            "kind": "type_id",
            "loc": Cell,
            "text": "Cell",
          },
        },
        "default": undefined,
        "index": 2,
        "loc": s: Cell as remaining,
        "name": "s",
        "type": {
          "kind": "ref",
          "name": "Cell",
          "optional": false,
        },
      },
    ],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "struct",
    "name": "Test",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": "Test{a:int257,b:int257,s:remainder<cell>}",
    "tlb": "_ a:int257 b:int257 s:remainder<cell> = Test",
    "traits": [],
    "uid": 44104,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for struct-decl-remainder 2`] = `[]`;

exports[`resolveDescriptors should resolve descriptors for trait-base 1`] = `
[
  {
    "ast": {
      "id": 2,
      "kind": "primitive_type_decl",
      "loc": primitive Int;,
      "name": {
        "id": 1,
        "kind": "type_id",
        "loc": Int,
        "text": "Int",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Int",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 38154,
  },
  {
    "ast": {
      "id": 4,
      "kind": "primitive_type_decl",
      "loc": primitive Bool;,
      "name": {
        "id": 3,
        "kind": "type_id",
        "loc": Bool,
        "text": "Bool",
      },
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "primitive_type_decl",
    "name": "Bool",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 33424,
  },
  {
    "ast": {
      "attributes": [],
      "declarations": [],
      "id": 6,
      "kind": "trait",
      "loc": trait BaseTrait {
    
},
      "name": {
        "id": 5,
        "kind": "id",
        "loc": BaseTrait,
        "text": "BaseTrait",
      },
      "traits": [],
    },
    "constants": [],
    "dependsOn": [],
    "fields": [],
    "functions": Map {},
    "header": null,
    "init": null,
    "interfaces": [],
    "kind": "trait",
    "name": "BaseTrait",
    "origin": "user",
    "partialFieldCount": 0,
    "receivers": [],
    "signature": null,
    "tlb": null,
    "traits": [],
    "uid": 1020,
  },
]
`;

exports[`resolveDescriptors should resolve descriptors for trait-base 2`] = `[]`;
