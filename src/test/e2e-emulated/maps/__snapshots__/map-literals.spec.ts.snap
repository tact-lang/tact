// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should correctly compile const in contract 1`] = `
Dictionary {
  "_key": {
    "bits": 16,
    "parse": [Function],
    "serialize": [Function],
  },
  "_map": Map {
    "n:-1" => 2,
  },
  "_value": {
    "parse": [Function],
    "serialize": [Function],
  },
}
`;

exports[`should correctly compile empty literals 1`] = `
Dictionary {
  "_key": {
    "bits": 16,
    "parse": [Function],
    "serialize": [Function],
  },
  "_map": Map {},
  "_value": {
    "parse": [Function],
    "serialize": [Function],
  },
}
`;

exports[`should correctly compile global const 1`] = `
Dictionary {
  "_key": {
    "bits": 16,
    "parse": [Function],
    "serialize": [Function],
  },
  "_map": Map {
    "n:1" => -2,
  },
  "_value": {
    "parse": [Function],
    "serialize": [Function],
  },
}
`;

exports[`should correctly compile in functions 1`] = `
Dictionary {
  "_key": {
    "bits": 16,
    "parse": [Function],
    "serialize": [Function],
  },
  "_map": Map {
    "n:1234" => 2345,
    "n:8765" => 7654,
  },
  "_value": {
    "parse": [Function],
    "serialize": [Function],
  },
}
`;

exports[`should create maps with address keys 1`] = `
Dictionary {
  "_key": {
    "bits": 267,
    "parse": [Function],
    "serialize": [Function],
  },
  "_map": Map {
    "a:EQAYqo4u7VF0fa4DPAebk4g9lBytj2VFny7pzXR0trjtXQaO" => 2000000000n,
    "a:EQDtFpEwcFAEcRe5mLVh2N6C0x-_hJEM7W61_JLnSF74p4q2" => 1000000000n,
  },
  "_value": {
    "parse": [Function],
    "serialize": [Function],
  },
}
`;

exports[`should work anonymously 1`] = `3n`;

exports[`should work as global constant map 1`] = `-2n`;

exports[`should work with expressions in keys and values 1`] = `
Dictionary {
  "_key": {
    "bits": 16,
    "parse": [Function],
    "serialize": [Function],
  },
  "_map": Map {
    "n:3" => 7,
  },
  "_value": {
    "parse": [Function],
    "serialize": [Function],
  },
}
`;

exports[`should work with large maps 1`] = `
Dictionary {
  "_key": {
    "bits": 257,
    "parse": [Function],
    "serialize": [Function],
  },
  "_map": Map {
    "b:0" => 0n,
    "b:1" => 1n,
    "b:2" => 2n,
    "b:3" => 3n,
    "b:4" => 4n,
    "b:5" => 5n,
    "b:6" => 6n,
    "b:7" => 7n,
    "b:8" => 8n,
    "b:9" => 9n,
    "b:10" => 10n,
    "b:11" => 11n,
    "b:12" => 12n,
    "b:13" => 13n,
    "b:14" => 14n,
    "b:15" => 15n,
    "b:16" => 16n,
    "b:17" => 17n,
    "b:18" => 18n,
    "b:19" => 19n,
    "b:20" => 20n,
    "b:21" => 21n,
    "b:22" => 22n,
    "b:23" => 23n,
    "b:24" => 24n,
    "b:25" => 25n,
    "b:26" => 26n,
    "b:27" => 27n,
    "b:28" => 28n,
    "b:29" => 29n,
    "b:30" => 30n,
    "b:31" => 31n,
    "b:32" => 32n,
    "b:33" => 33n,
    "b:34" => 34n,
    "b:35" => 35n,
    "b:36" => 36n,
    "b:37" => 37n,
    "b:38" => 38n,
    "b:39" => 39n,
    "b:40" => 40n,
    "b:41" => 41n,
    "b:42" => 42n,
    "b:43" => 43n,
    "b:44" => 44n,
    "b:45" => 45n,
    "b:46" => 46n,
    "b:47" => 47n,
    "b:48" => 48n,
    "b:49" => 49n,
    "b:50" => 50n,
    "b:51" => 51n,
    "b:52" => 52n,
    "b:53" => 53n,
    "b:54" => 54n,
    "b:55" => 55n,
    "b:56" => 56n,
    "b:57" => 57n,
    "b:58" => 58n,
    "b:59" => 59n,
    "b:60" => 60n,
    "b:61" => 61n,
    "b:62" => 62n,
    "b:63" => 63n,
    "b:64" => 64n,
    "b:65" => 65n,
    "b:66" => 66n,
    "b:67" => 67n,
    "b:68" => 68n,
    "b:69" => 69n,
    "b:70" => 70n,
    "b:71" => 71n,
    "b:72" => 72n,
    "b:73" => 73n,
    "b:74" => 74n,
    "b:75" => 75n,
    "b:76" => 76n,
    "b:77" => 77n,
    "b:78" => 78n,
    "b:79" => 79n,
    "b:80" => 80n,
    "b:81" => 81n,
    "b:82" => 82n,
    "b:83" => 83n,
    "b:84" => 84n,
    "b:85" => 85n,
    "b:86" => 86n,
    "b:87" => 87n,
    "b:88" => 88n,
    "b:89" => 89n,
    "b:90" => 90n,
    "b:91" => 91n,
    "b:92" => 92n,
    "b:93" => 93n,
    "b:94" => 94n,
    "b:95" => 95n,
    "b:96" => 96n,
    "b:97" => 97n,
    "b:98" => 98n,
    "b:99" => 99n,
    "b:100" => 100n,
    "b:101" => 101n,
    "b:102" => 102n,
    "b:103" => 103n,
    "b:104" => 104n,
    "b:105" => 105n,
    "b:106" => 106n,
    "b:107" => 107n,
    "b:108" => 108n,
    "b:109" => 109n,
    "b:110" => 110n,
    "b:111" => 111n,
    "b:112" => 112n,
    "b:113" => 113n,
    "b:114" => 114n,
    "b:115" => 115n,
    "b:116" => 116n,
    "b:117" => 117n,
    "b:118" => 118n,
    "b:119" => 119n,
    "b:120" => 120n,
    "b:121" => 121n,
    "b:122" => 122n,
    "b:123" => 123n,
    "b:124" => 124n,
    "b:125" => 125n,
    "b:126" => 126n,
    "b:127" => 127n,
    "b:128" => 128n,
    "b:129" => 129n,
    "b:130" => 130n,
    "b:131" => 131n,
    "b:132" => 132n,
    "b:133" => 133n,
    "b:134" => 134n,
    "b:135" => 135n,
    "b:136" => 136n,
    "b:137" => 137n,
    "b:138" => 138n,
    "b:139" => 139n,
    "b:140" => 140n,
    "b:141" => 141n,
    "b:142" => 142n,
    "b:143" => 143n,
    "b:144" => 144n,
    "b:145" => 145n,
    "b:146" => 146n,
    "b:147" => 147n,
    "b:148" => 148n,
    "b:149" => 149n,
    "b:150" => 150n,
    "b:151" => 151n,
    "b:152" => 152n,
    "b:153" => 153n,
    "b:154" => 154n,
    "b:155" => 155n,
    "b:156" => 156n,
    "b:157" => 157n,
    "b:158" => 158n,
    "b:159" => 159n,
    "b:160" => 160n,
    "b:161" => 161n,
    "b:162" => 162n,
    "b:163" => 163n,
    "b:164" => 164n,
    "b:165" => 165n,
    "b:166" => 166n,
    "b:167" => 167n,
    "b:168" => 168n,
    "b:169" => 169n,
    "b:170" => 170n,
    "b:171" => 171n,
    "b:172" => 172n,
    "b:173" => 173n,
    "b:174" => 174n,
    "b:175" => 175n,
    "b:176" => 176n,
    "b:177" => 177n,
    "b:178" => 178n,
    "b:179" => 179n,
    "b:180" => 180n,
    "b:181" => 181n,
    "b:182" => 182n,
    "b:183" => 183n,
    "b:184" => 184n,
    "b:185" => 185n,
    "b:186" => 186n,
    "b:187" => 187n,
    "b:188" => 188n,
    "b:189" => 189n,
    "b:190" => 190n,
    "b:191" => 191n,
    "b:192" => 192n,
    "b:193" => 193n,
    "b:194" => 194n,
    "b:195" => 195n,
    "b:196" => 196n,
    "b:197" => 197n,
    "b:198" => 198n,
    "b:199" => 199n,
  },
  "_value": {
    "parse": [Function],
    "serialize": [Function],
  },
}
`;

exports[`the last value of the same key should be used 1`] = `4n`;
