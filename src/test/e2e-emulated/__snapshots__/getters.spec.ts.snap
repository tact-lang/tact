// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getters should implement getters correctly 1`] = `
Test {
  "abi": {
    "errors": {
      "10": {
        "message": "Dictionary error",
      },
      "128": {
        "message": "Null reference exception",
      },
      "129": {
        "message": "Invalid serialization prefix",
      },
      "13": {
        "message": "Out of gas error",
      },
      "130": {
        "message": "Invalid incoming message",
      },
      "131": {
        "message": "Constraints error",
      },
      "132": {
        "message": "Access denied",
      },
      "133": {
        "message": "Contract stopped",
      },
      "134": {
        "message": "Invalid argument",
      },
      "135": {
        "message": "Code of a contract was not found",
      },
      "136": {
        "message": "Invalid address",
      },
      "137": {
        "message": "Masterchain support is not enabled for this contract",
      },
      "2": {
        "message": "Stack underflow",
      },
      "3": {
        "message": "Stack overflow",
      },
      "32": {
        "message": "Method ID not found",
      },
      "34": {
        "message": "Action is invalid or not supported",
      },
      "37": {
        "message": "Not enough TON",
      },
      "38": {
        "message": "Not enough extra-currencies",
      },
      "4": {
        "message": "Integer overflow",
      },
      "5": {
        "message": "Integer out of expected range",
      },
      "6": {
        "message": "Invalid opcode",
      },
      "7": {
        "message": "Type check error",
      },
      "8": {
        "message": "Cell overflow",
      },
      "9": {
        "message": "Cell underflow",
      },
    },
    "getters": [
      {
        "arguments": [],
        "name": "testGetter",
        "returnType": {
          "format": 257,
          "kind": "simple",
          "optional": false,
          "type": "int",
        },
      },
      {
        "arguments": [],
        "name": "test_getter",
        "returnType": {
          "format": 257,
          "kind": "simple",
          "optional": false,
          "type": "int",
        },
      },
      {
        "arguments": [],
        "name": "Test_getter",
        "returnType": {
          "format": 257,
          "kind": "simple",
          "optional": false,
          "type": "int",
        },
      },
      {
        "arguments": [],
        "name": "contractData",
        "returnType": {
          "kind": "simple",
          "optional": false,
          "type": "Test$Data",
        },
      },
      {
        "arguments": [
          {
            "name": "s",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "S",
            },
          },
        ],
        "name": "structAsInput",
        "returnType": {
          "kind": "simple",
          "optional": false,
          "type": "S",
        },
      },
      {
        "arguments": [
          {
            "name": "test",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "Test$Data",
            },
          },
        ],
        "name": "contractAsInput",
        "returnType": {
          "kind": "simple",
          "optional": false,
          "type": "Test$Data",
        },
      },
    ],
    "receivers": [
      {
        "message": {
          "kind": "typed",
          "type": "SetIdAndData",
        },
        "receiver": "internal",
      },
      {
        "message": {
          "kind": "typed",
          "type": "Deploy",
        },
        "receiver": "internal",
      },
    ],
    "types": [
      {
        "fields": [
          {
            "name": "code",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "cell",
            },
          },
          {
            "name": "data",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "cell",
            },
          },
        ],
        "header": null,
        "name": "StateInit",
      },
      {
        "fields": [
          {
            "name": "bounced",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "bool",
            },
          },
          {
            "name": "sender",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "address",
            },
          },
          {
            "name": "value",
            "type": {
              "format": 257,
              "kind": "simple",
              "optional": false,
              "type": "int",
            },
          },
          {
            "name": "raw",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "slice",
            },
          },
        ],
        "header": null,
        "name": "Context",
      },
      {
        "fields": [
          {
            "name": "bounce",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "bool",
            },
          },
          {
            "name": "to",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "address",
            },
          },
          {
            "name": "value",
            "type": {
              "format": 257,
              "kind": "simple",
              "optional": false,
              "type": "int",
            },
          },
          {
            "name": "mode",
            "type": {
              "format": 257,
              "kind": "simple",
              "optional": false,
              "type": "int",
            },
          },
          {
            "name": "body",
            "type": {
              "kind": "simple",
              "optional": true,
              "type": "cell",
            },
          },
          {
            "name": "code",
            "type": {
              "kind": "simple",
              "optional": true,
              "type": "cell",
            },
          },
          {
            "name": "data",
            "type": {
              "kind": "simple",
              "optional": true,
              "type": "cell",
            },
          },
        ],
        "header": null,
        "name": "SendParameters",
      },
      {
        "fields": [
          {
            "name": "queryId",
            "type": {
              "format": 64,
              "kind": "simple",
              "optional": false,
              "type": "uint",
            },
          },
        ],
        "header": 2490013878,
        "name": "Deploy",
      },
      {
        "fields": [
          {
            "name": "queryId",
            "type": {
              "format": 64,
              "kind": "simple",
              "optional": false,
              "type": "uint",
            },
          },
        ],
        "header": 2952335191,
        "name": "DeployOk",
      },
      {
        "fields": [
          {
            "name": "queryId",
            "type": {
              "format": 64,
              "kind": "simple",
              "optional": false,
              "type": "uint",
            },
          },
          {
            "name": "cashback",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "address",
            },
          },
        ],
        "header": 1829761339,
        "name": "FactoryDeploy",
      },
      {
        "fields": [
          {
            "name": "a",
            "type": {
              "format": 257,
              "kind": "simple",
              "optional": false,
              "type": "int",
            },
          },
          {
            "name": "b",
            "type": {
              "format": 257,
              "kind": "simple",
              "optional": false,
              "type": "int",
            },
          },
        ],
        "header": null,
        "name": "S",
      },
      {
        "fields": [
          {
            "name": "id",
            "type": {
              "format": 257,
              "kind": "simple",
              "optional": false,
              "type": "int",
            },
          },
          {
            "name": "data",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "cell",
            },
          },
        ],
        "header": 1746430141,
        "name": "SetIdAndData",
      },
      {
        "fields": [
          {
            "name": "id",
            "type": {
              "format": 32,
              "kind": "simple",
              "optional": false,
              "type": "uint",
            },
          },
          {
            "name": "anotherData",
            "type": {
              "kind": "simple",
              "optional": false,
              "type": "cell",
            },
          },
        ],
        "header": null,
        "name": "Test$Data",
      },
    ],
  },
  "address": kQBJzzDQ5H5TCORVona7ggMuJgyrJx9ZuZrwFUXXjw7LLq9e,
  "init": {
    "code": x{FF00F4A413F4BCF2C80B}
 x{62_}
  x{D001D0D3030171B0A301FA400120D74981010BBAF2E08820D70B0A208104FFBAF2D0898309BAF2E088545053036F04F86102F862DB3C5ADB3CF2E082C8F84301CC7F01CA005902CB1FCCC9ED54}
   x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
    x{70C8C9}
   x{0192307FE07021D749C21F953020D70B1FDE208210681868BDBA8E1A30D31F018210681868BDBAF2E081810101D700D4596C126C227FE08210946A98B6BA8EA7D31F018210946A98B6BAF2E081D33F0131C8018210AFF90F5758CB1FCB3FC9F84201706DDB3C7FE03070}
    x{6D6D226EB3995B206EF2D0806F22019132E2102470030480425023DB3C}
     x{C87101CA01500701CA007001CA02500520D74981010BBAF2E08820D70B0A208104FFBAF2D0898309BAF2E088CF165003FA027001CA68236EB3917F93246EB3E2973333017001CA00E30D216EB39C7F01CA0001206EF2D08001CC95317001CA00E2C901FB00}
      x{7F01CA00C87001CA007001CA00246EB39D7F01CA0004206EF2D0805004CC9634037001CA00E2246EB39D7F01CA0004206EF2D0805004CC9634037001CA00E27001CA00027F01CA0002C958CC}
  x{2_}
   x{2_}
    x{66_}
     x{AFD8ED9E6D9E36114_}
      x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
       x{70C8C9}
      x{5C}
     x{ADEE6D9E6D9E3610C_}
      x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
       x{70C8C9}
      x{73}
    x{BBE1FDB3CDB3C6C21}
     x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
      x{70C8C9}
     x{71}
   x{2_}
    x{BB1A6DB3CDB3C6C21}
     x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
      x{70C8C9}
     x{72}
    x{2_}
     x{B457DDA89A1A40003_}
     x{2_}
      x{B2D85BC8B6CF169B08A_}
       x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
        x{70C8C9}
      x{B1B1DBC8B6CF169B08A_}
       x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
        x{70C8C9},
    "data": x{4_}
 x{C_}
  x{A15891_}
   x{FF00F4A413F4BCF2C80B}
    x{62_}
     x{D001D0D3030171B0A301FA400120D74981010BBAF2E08820D70B0A208104FFBAF2D0898309BAF2E088545053036F04F86102F862DB3C5ADB3CF2E082C8F84301CC7F01CA005902CB1FCCC9ED54}
      x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
       x{70C8C9}
      x{0192307FE07021D749C21F953020D70B1FDE208210681868BDBA8E1A30D31F018210681868BDBAF2E081810101D700D4596C126C227FE08210946A98B6BA8EA7D31F018210946A98B6BAF2E081D33F0131C8018210AFF90F5758CB1FCB3FC9F84201706DDB3C7FE03070}
       x{6D6D226EB3995B206EF2D0806F22019132E2102470030480425023DB3C}
        x{C87101CA01500701CA007001CA02500520D74981010BBAF2E08820D70B0A208104FFBAF2D0898309BAF2E088CF165003FA027001CA68236EB3917F93246EB3E2973333017001CA00E30D216EB39C7F01CA0001206EF2D08001CC95317001CA00E2C901FB00}
         x{7F01CA00C87001CA007001CA00246EB39D7F01CA0004206EF2D0805004CC9634037001CA00E2246EB39D7F01CA0004206EF2D0805004CC9634037001CA00E27001CA00027F01CA0002C958CC}
     x{2_}
      x{2_}
       x{66_}
        x{AFD8ED9E6D9E36114_}
         x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
          x{70C8C9}
         x{5C}
        x{ADEE6D9E6D9E3610C_}
         x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
          x{70C8C9}
         x{73}
       x{BBE1FDB3CDB3C6C21}
        x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
         x{70C8C9}
        x{71}
      x{2_}
       x{BB1A6DB3CDB3C6C21}
        x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
         x{70C8C9}
        x{72}
       x{2_}
        x{B457DDA89A1A40003_}
        x{2_}
         x{B2D85BC8B6CF169B08A_}
          x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
           x{70C8C9}
         x{B1B1DBC8B6CF169B08A_}
          x{ED44D0D401F863D2000196D31FD4596C12E030F828D70B0A8309BAF2E089DB3C}
           x{70C8C9},
  },
}
`;

exports[`getters should implement getters correctly 2`] = `
{
  "$$type": "S",
  "a": 1n,
  "b": 2n,
}
`;

exports[`getters should implement getters correctly 3`] = `
{
  "$$type": "Test$Data",
  "anotherData": x{},
  "id": 0n,
}
`;

exports[`getters should implement getters correctly 4`] = `
{
  "$$type": "Test$Data",
  "anotherData": x{000000000000007B},
  "id": 123n,
}
`;
