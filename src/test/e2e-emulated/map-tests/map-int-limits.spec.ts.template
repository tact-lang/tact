import { toNano } from "@ton/core";
import { Blockchain } from "@ton/sandbox";
import { MapIntLimitTester } from "./test_MapIntLimitTester";
import "@ton/test-utils";

describe("map int limits", () => {
    it("should pass map int limit tests", async () => {
        const blockchain = await Blockchain.create();
        blockchain.verbosity.print = false;
        const treasure = await blockchain.treasury("treasure");
        const contract = blockchain.openContract(
            await MapIntLimitTester.fromInit(),
        );

        const result = await contract.send(
            treasure.getSender(),
            {
                value: toNano("10"),
            },
            null,
        );

        expect(result.transactions).toHaveTransaction({
            from: treasure.address,
            to: contract.address,
            success: true,
            deploy: true,
        });

        expect(await contract.getTestSetMinAndMaxDoesNotThrow()).toStrictEqual(true);
        expect(await contract.getTestGetGreaterThanMax()).toStrictEqual(true);
        expect(await contract.getTestGetSmallerThanMin()).toStrictEqual(true);
        expect(await contract.getTestSetKeyGreaterThanMax()).toStrictEqual(true);
        expect(await contract.getTestSetKeySmallerThanMin()).toStrictEqual(true);
        expect(await contract.getTestSetValGreaterThanMax()).toStrictEqual(true);
        expect(await contract.getTestSetValSmallerThanMin()).toStrictEqual(true);
    });
});
