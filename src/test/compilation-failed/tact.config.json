{
  "$schema": "http://raw.githubusercontent.com/tact-lang/tact/main/schemas/configSchema.json",
  "projects": [
    {
      "name": "const-eval-invalid-address",
      "path": "./contracts/const-eval-invalid-address.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-div-by-zero",
      "path": "./contracts/const-eval-div-by-zero.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-mod-by-zero",
      "path": "./contracts/const-eval-mod-by-zero.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-positive-literal",
      "path": "./contracts/const-eval-int-overflow-positive-literal.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-negative-literal",
      "path": "./contracts/const-eval-int-overflow-negative-literal.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-add",
      "path": "./contracts/const-eval-int-overflow-add.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-sub",
      "path": "./contracts/const-eval-int-overflow-sub.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-mul1",
      "path": "./contracts/const-eval-int-overflow-mul1.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-mul2",
      "path": "./contracts/const-eval-int-overflow-mul2.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-div",
      "path": "./contracts/const-eval-int-overflow-div.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-ton1",
      "path": "./contracts/const-eval-int-overflow-ton1.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-ton2",
      "path": "./contracts/const-eval-int-overflow-ton2.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-pow-1",
      "path": "./contracts/const-eval-int-overflow-pow-1.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-pow-2",
      "path": "./contracts/const-eval-int-overflow-pow-2.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-pow2-1",
      "path": "./contracts/const-eval-int-overflow-pow2-1.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-pow2-2",
      "path": "./contracts/const-eval-int-overflow-pow2-2.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-shl1",
      "path": "./contracts/const-eval-int-overflow-shl1.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-shl2",
      "path": "./contracts/const-eval-int-overflow-shl2.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-struct-instance",
      "path": "./contracts/const-eval-int-overflow-struct-instance.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-shl-invalid-bits1",
      "path": "./contracts/const-eval-shl-invalid-bits1.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-shl-invalid-bits2",
      "path": "./contracts/const-eval-shl-invalid-bits2.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-unboxing-null",
      "path": "./contracts/const-eval-unboxing-null.tact",
      "output": "./contracts/output"
    },
    {
      "name": "stdlib-skipBits",
      "path": "./contracts/stdlib-skipBits.tact",
      "output": "./contracts/output"
    },
    {
      "name": "contract-duplicate-bounced-opcode",
      "path": "./contracts/contract-duplicate-bounced-opcode.tact",
      "output": "./contracts/output"
    },
    {
      "name": "contract-duplicate-external-opcode",
      "path": "./contracts/contract-duplicate-external-opcode.tact",
      "output": "./contracts/output",
      "options": { "external": true }
    },
    {
      "name": "contract-duplicate-receiver-opcode",
      "path": "./contracts/contract-duplicate-receiver-opcode.tact",
      "output": "./contracts/output"
    },
    {
      "name": "func-function-does-not-exist",
      "path": "./contracts/func-function-does-not-exist.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-div-by-zero-in-fun",
      "path": "./contracts/const-eval-div-by-zero-in-fun.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-add-in-fun",
      "path": "./contracts/const-eval-int-overflow-add-in-fun.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-div-in-fun",
      "path": "./contracts/const-eval-int-overflow-div-in-fun.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-mul1-in-fun",
      "path": "./contracts/const-eval-int-overflow-mul1-in-fun.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-mul2-in-fun",
      "path": "./contracts/const-eval-int-overflow-mul2-in-fun.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-positive-literal-in-fun",
      "path": "./contracts/const-eval-int-overflow-positive-literal-in-fun.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-negative-literal-in-fun",
      "path": "./contracts/const-eval-int-overflow-negative-literal-in-fun.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-int-overflow-struct-instance-in-fun",
      "path": "./contracts/const-eval-int-overflow-struct-instance-in-fun.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-repeat-lower-bound",
      "path": "./contracts/const-eval-repeat-lower-bound.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-repeat-upper-bound",
      "path": "./contracts/const-eval-repeat-upper-bound.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-ascii-overflow",
      "path": "./contracts/const-eval-ascii-overflow.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-ascii-overflow-2",
      "path": "./contracts/const-eval-ascii-overflow-2.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-rawslice-not-hex",
      "path": "./contracts/const-eval-rawslice-not-hex.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-rawslice-overflow",
      "path": "./contracts/const-eval-rawslice-overflow.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-rawslice-overflow-padded",
      "path": "./contracts/const-eval-rawslice-overflow-padded.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-rawslice-invalid",
      "path": "./contracts/const-eval-rawslice-invalid.tact",
      "output": "./contracts/output"
    },
    {
      "name": "const-eval-ascii-empty",
      "path": "./contracts/const-eval-ascii-empty.tact",
      "output": "./contracts/output"
    },
    {
      "name": "scope-const-shadows-stdlib-ident",
      "path": "./contracts/scope-const-shadows-stdlib-ident.tact",
      "output": "./contracts/output"
    },
    {
      "name": "sha256-expects-string-or-slice",
      "path": "./contracts/sha256-expects-string-or-slice.tact",
      "output": "./contracts/output"
    }
  ]
}
